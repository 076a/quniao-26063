‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄Wcif (!("finalizeConstruction" in ViewPU.prototype)) {
    Reflect.set(ViewPU.prototype, "finalizeConstruction", () => { });
}
import { EditDialog } from './EditDialog';
import { AddDialog } from './AddDialog';
import DeviceSearch from './DeviceSearch';
import DeviceDate from '../viewmodel/DeviceData';
import DeviceItem from '../viewmodel/DeviceItem';
import { router } from '@kit.ArkUI';
import MemoTable from 'ets/common/database/MemoTable';
import Logger from 'ets/utils/Logger';
export default class Home extends ViewPU {
    constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) {
        super(parent, __localStorage, elmtId, extraInfo);
        if (typeof paramsLambda === "function") {
            this.paramsGenerator_ = paramsLambda;
        }
        this.__NameEdit = new ObservedPropertySimplePU('', this, "NameEdit");
        this.__DescribeEdit = new ObservedPropertySimplePU('', this, "DescribeEdit");
        this.__showEditDialog = new ObservedPropertySimplePU(false, this, "showEditDialog");
        this.__isAddDialogShow = new ObservedPropertySimplePU(false, this, "isAddDialogShow");
        this.__memoList = new ObservedPropertyObjectPU([], this, "memoList");
        this.originDevice = [];
        this.__order = new ObservedPropertySimplePU(true, this, "order");
        this.__keywords = new ObservedPropertySimplePU('', this, "keywords");
        this.editingMemoIndex = -1;
        this.__currentId = new ObservedPropertySimplePU(-1, this, "currentId");
        this.cleanKeywords = () => {
            this.keywords = '';
        };
        this.MemoTable = new MemoTable(() => {
        });
        this.createMemo = () => {
            const newMemo = new DeviceDate(0, this.NameEdit, this.DescribeEdit);
            this.MemoTable.insertData(newMemo, (id) => {
                newMemo.id = id;
                this.originDevice.push(newMemo);
                this.memoList = this.originDevice;
            });
            this.closeDialog();
        };
        this.clickMemo = (memo) => {
            router.pushUrl({
                url: 'view/Page',
                params: { id: memo.id }
            });
        };
        this.deleteMemo = (index) => {
            if (index !== -1) {
                this.MemoTable.deleteData(this.originDevice[index], () => {
                    this.originDevice.splice(index, 1);
                    this.memoList = this.originDevice;
                    this.closeDialog();
                });
            }
        };
        this.editMemo = () => {
            if (this.editingMemoIndex >= 0 && this.editingMemoIndex < this.memoList.length) {
                // Ëé∑ÂèñÂΩìÂâçÊ≠£Âú®ÁºñËæëÁöÑËÆæÂ§á
                const currentDevice = this.memoList[this.editingMemoIndex];
                // ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑËÆæÂ§áÂØπË±°Ôºå‰øùÁïôÊâÄÊúâÂéüÂßãÂ±ûÊÄßÔºåÂè™Êõ¥Êñ∞ÂêçÁß∞ÂíåÊèèËø∞
                const updatedDevice = new DeviceDate(currentDevice.id, this.NameEdit, this.DescribeEdit, currentDevice.status, currentDevice.Color, currentDevice.intervalTime, currentDevice.positionX, currentDevice.positionY);
                // Êõ¥Êñ∞ËÆæÂ§áÊï∞ÊçÆ
                this.MemoTable.updateData(updatedDevice, (result) => {
                    if (result) {
                        // ÈáçÊñ∞Âä†ËΩΩÊï∞ÊçÆ
                        this.loadData();
                    }
                    this.closeDialog();
                });
            }
        };
        this.openEditDialog = (index) => {
            this.editingMemoIndex = index;
            if (index >= 0 && index < this.memoList.length) {
                const device = this.memoList[index];
                this.NameEdit = device.name;
                this.DescribeEdit = device.description;
                // ËÆ∞ÂΩïÂΩìÂâçÁºñËæëÁöÑËÆæÂ§áÁöÑÂÆåÊï¥‰ø°ÊÅØ
                Logger.info('Home', `Opening edit dialog for device: ${JSON.stringify(device)}`);
            }
            this.showEditDialog = true;
        };
        this.saveMemo = () => {
            if (this.editingMemoIndex !== -1) {
                const memo = this.originDevice[this.editingMemoIndex];
                // ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑËÆæÂ§áÂØπË±°Ôºå‰øùÁïôÊâÄÊúâÂéüÂßãÂ±ûÊÄßÔºåÂè™Êõ¥Êñ∞ÂêçÁß∞ÂíåÊèèËø∞
                const updatedMemo = new DeviceDate(memo.id, this.NameEdit, this.DescribeEdit, memo.status, memo.Color, memo.intervalTime, memo.positionX, memo.positionY);
                this.MemoTable.updateData(updatedMemo, (result) => {
                    if (result) {
                        // ÈáçÊñ∞Âä†ËΩΩÊï∞ÊçÆ
                        this.loadData();
                    }
                    this.closeDialog();
                });
            }
        };
        this.__addContent = new ObservedPropertySimplePU(''
        // ÂÖ≥Èó≠ÂºπÁ™óÁöÑÊñπÊ≥ï
        , this, "addContent");
        this.closeDialog = () => {
            this.showEditDialog = false;
            this.addContent = '';
            this.isAddDialogShow = false;
            this.NameEdit = '';
            this.DescribeEdit = '';
            this.editingMemoIndex = -1;
        };
        this.addMemo = () => {
            if (this.NameEdit.length > 0) {
                let maxId = 0;
                // ÊâæÂá∫ÂΩìÂâçÊúÄÂ§ßID
                if (this.originDevice.length > 0) {
                    this.originDevice.forEach(device => {
                        if (device.id > maxId) {
                            maxId = device.id;
                        }
                    });
                }
                // ÂàõÂª∫Êñ∞ËÆæÂ§áÔºåÁ°Æ‰øùIDÂîØ‰∏Ä
                const newMemo = new DeviceDate(maxId + 1, this.NameEdit, this.DescribeEdit);
                this.MemoTable.insertData(newMemo, (result) => {
                    if (result) {
                        // ÈáçÊñ∞Âä†ËΩΩÊï∞ÊçÆ
                        this.loadData();
                    }
                    this.closeDialog();
                });
            }
        };
        this.setInitiallyProvidedValue(params);
        this.declareWatch("order", this.onOrderChange);
        this.declareWatch("keywords", this.onKeywordsChange);
        this.finalizeConstruction();
    }
    setInitiallyProvidedValue(params) {
        if (params.NameEdit !== undefined) {
            this.NameEdit = params.NameEdit;
        }
        if (params.DescribeEdit !== undefined) {
            this.DescribeEdit = params.DescribeEdit;
        }
        if (params.showEditDialog !== undefined) {
            this.showEditDialog = params.showEditDialog;
        }
        if (params.isAddDialogShow !== undefined) {
            this.isAddDialogShow = params.isAddDialogShow;
        }
        if (params.memoList !== undefined) {
            this.memoList = params.memoList;
        }
        if (params.originDevice !== undefined) {
            this.originDevice = params.originDevice;
        }
        if (params.order !== undefined) {
            this.order = params.order;
        }
        if (params.keywords !== undefined) {
            this.keywords = params.keywords;
        }
        if (params.editingMemoIndex !== undefined) {
            this.editingMemoIndex = params.editingMemoIndex;
        }
        if (params.currentId !== undefined) {
            this.currentId = params.currentId;
        }
        if (params.cleanKeywords !== undefined) {
            this.cleanKeywords = params.cleanKeywords;
        }
        if (params.MemoTable !== undefined) {
            this.MemoTable = params.MemoTable;
        }
        if (params.createMemo !== undefined) {
            this.createMemo = params.createMemo;
        }
        if (params.clickMemo !== undefined) {
            this.clickMemo = params.clickMemo;
        }
        if (params.deleteMemo !== undefined) {
            this.deleteMemo = params.deleteMemo;
        }
        if (params.editMemo !== undefined) {
            this.editMemo = params.editMemo;
        }
        if (params.openEditDialog !== undefined) {
            this.openEditDialog = params.openEditDialog;
        }
        if (params.saveMemo !== undefined) {
            this.saveMemo = params.saveMemo;
        }
        if (params.addContent !== undefined) {
            this.addContent = params.addContent;
        }
        if (params.closeDialog !== undefined) {
            this.closeDialog = params.closeDialog;
        }
        if (params.addMemo !== undefined) {
            this.addMemo = params.addMemo;
        }
    }
    updateStateVars(params) {
    }
    purgeVariableDependenciesOnElmtId(rmElmtId) {
        this.__NameEdit.purgeDependencyOnElmtId(rmElmtId);
        this.__DescribeEdit.purgeDependencyOnElmtId(rmElmtId);
        this.__showEditDialog.purgeDependencyOnElmtId(rmElmtId);
        this.__isAddDialogShow.purgeDependencyOnElmtId(rmElmtId);
        this.__memoList.purgeDependencyOnElmtId(rmElmtId);
        this.__order.purgeDependencyOnElmtId(rmElmtId);
        this.__keywords.purgeDependencyOnElmtId(rmElmtId);
        this.__currentId.purgeDependencyOnElmtId(rmElmtId);
        this.__addContent.purgeDependencyOnElmtId(rmElmtId);
    }
    aboutToBeDeleted() {
        this.__NameEdit.aboutToBeDeleted();
        this.__DescribeEdit.aboutToBeDeleted();
        this.__showEditDialog.aboutToBeDeleted();
        this.__isAddDialogShow.aboutToBeDeleted();
        this.__memoList.aboutToBeDeleted();
        this.__order.aboutToBeDeleted();
        this.__keywords.aboutToBeDeleted();
        this.__currentId.aboutToBeDeleted();
        this.__addContent.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id__());
        this.aboutToBeDeletedInternal();
    }
    get NameEdit() {
        return this.__NameEdit.get();
    }
    set NameEdit(newValue) {
        this.__NameEdit.set(newValue);
    }
    get DescribeEdit() {
        return this.__DescribeEdit.get();
    }
    set DescribeEdit(newValue) {
        this.__DescribeEdit.set(newValue);
    }
    get showEditDialog() {
        return this.__showEditDialog.get();
    }
    set showEditDialog(newValue) {
        this.__showEditDialog.set(newValue);
    }
    get isAddDialogShow() {
        return this.__isAddDialogShow.get();
    }
    set isAddDialogShow(newValue) {
        this.__isAddDialogShow.set(newValue);
    }
    get memoList() {
        return this.__memoList.get();
    }
    set memoList(newValue) {
        this.__memoList.set(newValue);
    }
    get order() {
        return this.__order.get();
    }
    set order(newValue) {
        this.__order.set(newValue);
    }
    get keywords() {
        return this.__keywords.get();
    }
    set keywords(newValue) {
        this.__keywords.set(newValue);
    }
    get currentId() {
        return this.__currentId.get();
    }
    set currentId(newValue) {
        this.__currentId.set(newValue);
    }
    onKeywordsChange() {
        if (this.keywords.length == 0) {
            this.memoList = this.originDevice;
            this.onOrderChange();
        }
        else {
            let resultList = [];
            for (const DeviceItem of this.originDevice) {
                if (DeviceItem.name.includes(this.keywords)) {
                    resultList.push(DeviceItem);
                }
            }
            this.memoList = resultList;
        }
    }
    get addContent() {
        return this.__addContent.get();
    }
    set addContent(newValue) {
        this.__addContent.set(newValue);
    }
    // È°µÈù¢ÂàùÂßãÂåñÂâçÂêëÈ°µÈù¢Âä†ËΩΩÊï∞ÊçÆ
    aboutToAppear() {
        this.originDevice = [];
        this.memoList = [];
        this.order = false;
        this.keywords = '';
        this.showEditDialog = false;
        this.isAddDialogShow = false;
        this.addContent = '';
        this.editingMemoIndex = -1;
        this.NameEdit = '';
        this.DescribeEdit = '';
        // Á°Æ‰øùÊï∞ÊçÆÂ∫ìËøûÊé•Ê≠£Á°ÆÂàùÂßãÂåñ
        this.MemoTable.getRdbStore(() => {
            Logger.info('Home', 'Database connection established');
            this.loadData();
        });
    }
    // Âä†ËΩΩÊï∞ÊçÆÁöÑÊñπÊ≥ï
    loadData() {
        this.MemoTable.query((result) => {
            Logger.info('Home', `Loaded ${result.length} devices from database`);
            this.originDevice = result;
            this.memoList = this.originDevice;
        });
    }
    // Âú®ÁªÑ‰ª∂ÈîÄÊØÅÊó∂Á°Æ‰øùÊ≠£Á°ÆÂÖ≥Èó≠Êï∞ÊçÆÂ∫ìËøûÊé•
    aboutToDisappear() {
        // Á°Æ‰øùÊâÄÊúâÊåÇËµ∑ÁöÑÊìç‰ΩúÈÉΩÂ∑≤ÂÆåÊàê
        setTimeout(() => {
            if (this.MemoTable) {
                this.MemoTable.deviceDateTable.closeRdbStore();
                Logger.info('Home', 'Database connection closed');
            }
        }, 500);
    }
    initialRender() {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Home.ets(229:5)", "entry");
            Column.width('100%');
            Column.height('100%');
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/view/Home.ets(230:7)", "entry");
            Row.justifyContent(FlexAlign.SpaceBetween);
            Row.width('100%');
            Row.margin({ top: '48vp', bottom: '12vp' });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('È©±È∏üË£ÖÁΩÆ');
            Text.debugLine("entry/src/main/ets/view/Home.ets(232:9)", "entry");
            Text.fontWeight(700);
            Text.fontSize('26fp');
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Image.create({ "id": 16777426, "type": 20000, params: [], "bundleName": "com.example.pageanddata", "moduleName": "entry" });
            Image.debugLine("entry/src/main/ets/view/Home.ets(237:9)", "entry");
            Image.width('30vp');
            Image.height('30vp');
            Image.onClick(() => {
                this.isAddDialogShow = true; // ÁÇπÂáªÊó∂ÊòæÁ§∫ÂºπÁ™ó
                this.NameEdit = ''; // ÈáçÁΩÆËÆæÂ§áÂêçÁß∞ËæìÂÖ•Ê°Ü
                this.DescribeEdit = '';
            });
        }, Image);
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            If.create();
            // Ê†πÊçÆÁä∂ÊÄÅÂèòÈáèÂÜ≥ÂÆöÊòØÂê¶ÊòæÁ§∫EditDialog
            if (this.showEditDialog) {
                this.ifElseBranchUpdateFunction(0, () => {
                    {
                        this.observeComponentCreation2((elmtId, isInitialRender) => {
                            if (isInitialRender) {
                                let componentCall = new EditDialog(this, {
                                    NameEdit: this.__NameEdit,
                                    DescribeEdit: this.__DescribeEdit,
                                    onClose: this.closeDialog,
                                    onSave: this.saveMemo
                                }, undefined, elmtId, () => { }, { page: "entry/src/main/ets/view/Home.ets", line: 251, col: 9 });
                                ViewPU.create(componentCall);
                                let paramsLambda = () => {
                                    return {
                                        NameEdit: this.NameEdit,
                                        DescribeEdit: this.DescribeEdit,
                                        onClose: this.closeDialog,
                                        onSave: this.saveMemo
                                    };
                                };
                                componentCall.paramsGenerator_ = paramsLambda;
                            }
                            else {
                                this.updateStateVarsOfChildByElmtId(elmtId, {});
                            }
                        }, { name: "EditDialog" });
                    }
                });
            }
            else {
                this.ifElseBranchUpdateFunction(1, () => {
                });
            }
        }, If);
        If.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            If.create();
            if (this.isAddDialogShow) {
                this.ifElseBranchUpdateFunction(0, () => {
                    {
                        this.observeComponentCreation2((elmtId, isInitialRender) => {
                            if (isInitialRender) {
                                let componentCall = new AddDialog(this, {
                                    NameEdit: this.__NameEdit,
                                    DescribeEdit: this.__DescribeEdit,
                                    onClose: this.closeDialog,
                                    onCreate: this.createMemo
                                }, undefined, elmtId, () => { }, { page: "entry/src/main/ets/view/Home.ets", line: 259, col: 9 });
                                ViewPU.create(componentCall);
                                let paramsLambda = () => {
                                    return {
                                        NameEdit: this.NameEdit,
                                        DescribeEdit: this.DescribeEdit,
                                        onClose: this.closeDialog,
                                        onCreate: this.createMemo
                                    };
                                };
                                componentCall.paramsGenerator_ = paramsLambda;
                            }
                            else {
                                this.updateStateVarsOfChildByElmtId(elmtId, {});
                            }
                        }, { name: "AddDialog" });
                    }
                });
            }
            else {
                this.ifElseBranchUpdateFunction(1, () => {
                });
            }
        }, If);
        If.pop();
        {
            this.observeComponentCreation2((elmtId, isInitialRender) => {
                if (isInitialRender) {
                    let componentCall = new DeviceSearch(this, { keywords: this.__keywords, cleanKeywords: this.cleanKeywords }, undefined, elmtId, () => { }, { page: "entry/src/main/ets/view/Home.ets", line: 266, col: 7 });
                    ViewPU.create(componentCall);
                    let paramsLambda = () => {
                        return {
                            keywords: this.keywords,
                            cleanKeywords: this.cleanKeywords
                        };
                    };
                    componentCall.paramsGenerator_ = paramsLambda;
                }
                else {
                    this.updateStateVarsOfChildByElmtId(elmtId, {});
                }
            }, { name: "DeviceSearch" });
        }
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Scroll.create();
            Scroll.debugLine("entry/src/main/ets/view/Home.ets(268:7)", "entry");
        }, Scroll);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Home.ets(269:9)", "entry");
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            ForEach.create();
            const forEachItemGenFunction = (_item, index) => {
                const memo = _item;
                {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        if (isInitialRender) {
                            let componentCall = new DeviceItem(this, {
                                memo: memo,
                                index: index,
                                onDelete: (idx) => this.deleteMemo(idx),
                                editCallback: (idx) => this.openEditDialog(idx)
                            }, undefined, elmtId, () => { }, { page: "entry/src/main/ets/view/Home.ets", line: 273, col: 15 });
                            ViewPU.create(componentCall);
                            let paramsLambda = () => {
                                return {
                                    memo: memo,
                                    index: index,
                                    onDelete: (idx) => this.deleteMemo(idx),
                                    editCallback: (idx) => this.openEditDialog(idx)
                                };
                            };
                            componentCall.paramsGenerator_ = paramsLambda;
                        }
                        else {
                            this.updateStateVarsOfChildByElmtId(elmtId, {
                                memo: memo
                            });
                        }
                    }, { name: "DeviceItem" });
                }
            };
            this.forEachUpdateFunction(elmtId, this.memoList, forEachItemGenFunction, (memo) => {
                return memo.name;
            }, true, false);
        }, ForEach);
        ForEach.pop();
        Column.pop();
        Scroll.pop();
        Column.pop();
    }
    onOrderChange() {
        let orderList = [];
        orderList = this.memoList.sort((a, b) => {
            if (this.order) {
                return a.id - b.id;
            }
            else {
                return b.id - a.id;
            }
        });
        this.memoList = orderList;
    }
    rerender() {
        this.updateDirtyElements();
    }
    static getEntryName() {
        return "Home";
    }
}
registerNamedRoute(() => new Home(undefined, {}), "", { bundleName: "com.example.pageanddata", moduleName: "entry", pagePath: "view/Home", pageFullPath: "entry/src/main/ets/view/Home", integratedHsp: "false", moduleType: "followWithHap" });
//# sourceMappingURL=Home.js.map¬òŸTD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\EditDialog.etsŸSD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\AddDialog.etsŸVD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\DeviceSearch.etsŸYD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\viewmodel\DeviceData.etsŸYD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\viewmodel\DeviceItem.etsŸV hvigor_ignore_D:_APPkf_DevEco Studio_sdk_default_openharmony_ets_kits_@kit.ArkUI.d.tsŸ^D:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\common\database\MemoTable.etsŸQD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\utils\Logger.etsŸND:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\Home.ets‘rBõ™moduleName±isLocalDependencyØisNodeEntryFileßpkgPath±belongProjectPathßpkgName™pkgVersion±dependencyPkgInfo∞belongModulePath¨shouldEmitJsØhostModulesInfo•entry√¬Ÿ3D:\APPkf\huawei_app\PageAndData02\02_Complete\entryŸ-D:\APPkf\huawei_app\PageAndData02\02_Complete•entry•1.0.0‘  Ÿ3D:\APPkf\huawei_app\PageAndData02\02_Complete\entry√ë‘rCí≤hostDependencyNameÆhostModuleName¨../view/Home•entry√⁄ nimport {EditDialog} from './EditDialog'
import {AddDialog} from './AddDialog'
import DeviceSearch from './DeviceSearch'
import DeviceDate from '../viewmodel/DeviceData'
import DeviceItem from '../viewmodel/DeviceItem'
import { router } from '@kit.ArkUI';
import { BusinessError } from '@kit.BasicServicesKit';
import MemoTable from 'ets/common/database/MemoTable'
import Logger from 'ets/utils/Logger';


@Entry
@Component
export default struct Home {


  @State NameEdit: string = '';
  @State DescribeEdit: string = '';
  @State showEditDialog: boolean = false; // Êñ∞Â¢ûÁä∂ÊÄÅÂèòÈáèÊéßÂà∂ÂºπÁ™óÊòæÁ§∫
  @State isAddDialogShow: boolean = false
  @State memoList:DeviceDate[]=[

  ]
  originDevice:DeviceDate[]=[]
  @State @Watch('onOrderChange') order:boolean=true
  @State @Watch('onKeywordsChange') keywords:string=''
  editingMemoIndex: number = -1
  @State currentId: number = -1;





  onKeywordsChange(){
    if(this.keywords.length==0){
      this.memoList=this.originDevice
      this.onOrderChange()
    }else{
      let resultList:DeviceDate[]=[]
      for(const DeviceItem of this.originDevice){
        if(DeviceItem.name.includes(this.keywords)){
          resultList.push(DeviceItem)
        }
      }
      this.memoList=resultList
    }
  }

  cleanKeywords=()=>{
    this.keywords=''
  }

  private MemoTable = new MemoTable(() => {
  })

  createMemo=()=>{

    const newMemo: DeviceDate = new DeviceDate(0, this.NameEdit, this.DescribeEdit);
    this.MemoTable.insertData(newMemo, (id: number) => {
      newMemo.id = id
      this.originDevice.push(newMemo)
      this.memoList=this.originDevice
    })
    this.closeDialog()


  }
  clickMemo = (memo: DeviceDate) => {
    router.pushUrl({
      url: 'view/Page',
      params: { id: memo.id }
    });
  }

  deleteMemo = (index: number) => {
    if (index!== -1) {
      this.MemoTable.deleteData(this.originDevice[index], () => {
        this.originDevice.splice(index, 1);
        this.memoList = this.originDevice;
        this.closeDialog();
      });
    }
  }
  editMemo = () => {
    if (this.editingMemoIndex >= 0 && this.editingMemoIndex < this.memoList.length) {
      // Ëé∑ÂèñÂΩìÂâçÊ≠£Âú®ÁºñËæëÁöÑËÆæÂ§á
      const currentDevice = this.memoList[this.editingMemoIndex];
      
      // ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑËÆæÂ§áÂØπË±°Ôºå‰øùÁïôÊâÄÊúâÂéüÂßãÂ±ûÊÄßÔºåÂè™Êõ¥Êñ∞ÂêçÁß∞ÂíåÊèèËø∞
      const updatedDevice = new DeviceDate(
        currentDevice.id,
        this.NameEdit,
        this.DescribeEdit,
        currentDevice.status,
        currentDevice.Color,
        currentDevice.intervalTime,
        currentDevice.positionX,
        currentDevice.positionY
      );
      
      // Êõ¥Êñ∞ËÆæÂ§áÊï∞ÊçÆ
      this.MemoTable.updateData(updatedDevice, (result: boolean) => {
        if (result) {
          // ÈáçÊñ∞Âä†ËΩΩÊï∞ÊçÆ
          this.loadData();
        }
        this.closeDialog();
      });
    }
  }
  // ÊâìÂºÄÁºñËæëÂØπËØùÊ°Ü
  openEditDialog = (index: number) => {
    this.editingMemoIndex = index;
    if (index >= 0 && index < this.memoList.length) {
      const device = this.memoList[index];
      this.NameEdit = device.name;
      this.DescribeEdit = device.description;
      
      // ËÆ∞ÂΩïÂΩìÂâçÁºñËæëÁöÑËÆæÂ§áÁöÑÂÆåÊï¥‰ø°ÊÅØ
      Logger.info('Home', `Opening edit dialog for device: ${JSON.stringify(device)}`);
    }
    this.showEditDialog = true;
  }
  // ‰øÆÊîπÁ¨îËÆ∞ÁöÑÊñπÊ≥ï
  saveMemo = () => {
    if (this.editingMemoIndex!== -1) {
      const memo = this.originDevice[this.editingMemoIndex];
      
      // ÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑËÆæÂ§áÂØπË±°Ôºå‰øùÁïôÊâÄÊúâÂéüÂßãÂ±ûÊÄßÔºåÂè™Êõ¥Êñ∞ÂêçÁß∞ÂíåÊèèËø∞
      const updatedMemo = new DeviceDate(
        memo.id,
        this.NameEdit,
        this.DescribeEdit,
        memo.status,
        memo.Color,
        memo.intervalTime,
        memo.positionX,
        memo.positionY
      );
      
      this.MemoTable.updateData(updatedMemo, (result: boolean) => {
        if (result) {
          // ÈáçÊñ∞Âä†ËΩΩÊï∞ÊçÆ
          this.loadData();
        }
        this.closeDialog();
      });
    }
  }
  @State addContent: string = ''
  // ÂÖ≥Èó≠ÂºπÁ™óÁöÑÊñπÊ≥ï
  closeDialog = () => {
    this.showEditDialog = false
    this.addContent = ''
    this.isAddDialogShow = false
    this.NameEdit = ''
    this.DescribeEdit = ''
    this.editingMemoIndex = -1
  }

  // È°µÈù¢ÂàùÂßãÂåñÂâçÂêëÈ°µÈù¢Âä†ËΩΩÊï∞ÊçÆ
  aboutToAppear() {
    this.originDevice = []
    this.memoList = []
    this.order = false
    this.keywords = ''
    this.showEditDialog = false
    this.isAddDialogShow = false
    this.addContent = ''
    this.editingMemoIndex = -1
    this.NameEdit = ''
    this.DescribeEdit = ''

    // Á°Æ‰øùÊï∞ÊçÆÂ∫ìËøûÊé•Ê≠£Á°ÆÂàùÂßãÂåñ
    this.MemoTable.getRdbStore(() => {
      Logger.info('Home', 'Database connection established');
      this.loadData();
    })
  }

  // Âä†ËΩΩÊï∞ÊçÆÁöÑÊñπÊ≥ï
  loadData() {
    this.MemoTable.query((result: DeviceDate[]) => {
      Logger.info('Home', `Loaded ${result.length} devices from database`);
      
      this.originDevice = result;
      this.memoList = this.originDevice;
    })
  }

  // Ê∑ªÂä†Á¨îËÆ∞ÁöÑÊñπÊ≥ï
  addMemo = () => {
    if (this.NameEdit.length > 0) {
      let maxId = 0;
      // ÊâæÂá∫ÂΩìÂâçÊúÄÂ§ßID
      if (this.originDevice.length > 0) {
        this.originDevice.forEach(device => {
          if (device.id > maxId) {
            maxId = device.id;
          }
        });
      }
      
      // ÂàõÂª∫Êñ∞ËÆæÂ§áÔºåÁ°Æ‰øùIDÂîØ‰∏Ä
      const newMemo = new DeviceDate(maxId + 1, this.NameEdit, this.DescribeEdit);
      
      this.MemoTable.insertData(newMemo, (result: number | boolean) => {
        if (result) {
          // ÈáçÊñ∞Âä†ËΩΩÊï∞ÊçÆ
          this.loadData();
        }
        this.closeDialog();
      });
    }
  }

  // Âú®ÁªÑ‰ª∂ÈîÄÊØÅÊó∂Á°Æ‰øùÊ≠£Á°ÆÂÖ≥Èó≠Êï∞ÊçÆÂ∫ìËøûÊé•
  aboutToDisappear() {
    // Á°Æ‰øùÊâÄÊúâÊåÇËµ∑ÁöÑÊìç‰ΩúÈÉΩÂ∑≤ÂÆåÊàê
    setTimeout(() => {
      if (this.MemoTable) {
        this.MemoTable.deviceDateTable.closeRdbStore();
        Logger.info('Home', 'Database connection closed');
      }
    }, 500);
  }

  build() {
    Column() {
      Row() {

        Text('È©±È∏üË£ÖÁΩÆ')
          .fontWeight(700)
          .fontSize('26fp');


        Image($r("app.media.add"))
          .width('30vp')
          .height('30vp')
          .onClick(() => {
            this.isAddDialogShow = true; // ÁÇπÂáªÊó∂ÊòæÁ§∫ÂºπÁ™ó
            this.NameEdit = ''; // ÈáçÁΩÆËÆæÂ§áÂêçÁß∞ËæìÂÖ•Ê°Ü
            this.DescribeEdit = '';
          });
      }
      .justifyContent(FlexAlign.SpaceBetween)
      .width('100%')
      .margin({ top: '48vp', bottom: '12vp' });
      // Ê†πÊçÆÁä∂ÊÄÅÂèòÈáèÂÜ≥ÂÆöÊòØÂê¶ÊòæÁ§∫EditDialog
      if (this.showEditDialog) {
        EditDialog({
          NameEdit: this.NameEdit,
          DescribeEdit: this.DescribeEdit,
          onClose: this.closeDialog,
          onSave: this.saveMemo
        });
      }
      if (this.isAddDialogShow) {
        AddDialog({
          NameEdit: this.NameEdit,
          DescribeEdit: this.DescribeEdit,
          onClose: this.closeDialog,
          onCreate: this.createMemo
        });
      }
      DeviceSearch({keywords:$keywords,cleanKeywords:this.cleanKeywords})

      Scroll(){
        Column(){
          ForEach(
            this.memoList,
            (memo: DeviceDate, index: number) => {
              DeviceItem({
                memo: memo,
                index: index, // ‰º†ÈÄíindex
                onDelete: (idx): void => this.deleteMemo(idx),
                editCallback: (idx): void => this.openEditDialog(idx)
              });
            },
            (memo: DeviceDate) => {
              return memo.name;
            }
          )
        }
      }


    }
    .width('100%')
    .height('100%');
  }


  onOrderChange() {
    let orderList:DeviceDate[]=[]
    orderList=this.memoList.sort((a,b)=>{
      if(this.order){
        return a.id-b.id
      }else{
        return b.id-a.id
      }
    })
    this.memoList=orderList
  }
}¿‘rDò™@kit.ArkUI¨./EditDialogÆ./DeviceSearch∑../viewmodel/DeviceData∑../viewmodel/DeviceItemΩets/common/database/MemoTable´./AddDialog∞ets/utils/Logger‘rEó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA√ŸV hvigor_ignore_D:_APPkf_DevEco Studio_sdk_default_openharmony_ets_kits_@kit.ArkUI.d.tsA√™oh-resolve¬EA¬ŸTD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\EditDialog.etsA√™oh-resolve¬EA¬ŸVD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\DeviceSearch.etsA√™oh-resolve¬EA¬ŸYD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\viewmodel\DeviceData.etsA√™oh-resolve¬EA¬ŸYD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\viewmodel\DeviceItem.etsA√™oh-resolve¬EA¬Ÿ^D:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\common\database\MemoTable.etsA√™oh-resolve¬EA¬ŸSD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\AddDialog.etsA√™oh-resolve¬EA¬ŸQD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\utils\Logger.etsA√™oh-resolve¬ì‘rFñßversion§file™sourceRootßsources•names®mappingsßHome.js†ë®Home.etsê‹êêêòî    î  î	  î  î  î  î)  'î*  'òî   î î	 î î î î' %î( %ñî   î î î î) )î* )ñî   î î î î0 0î1 0ñî   î î î î0 0î1 0òî   î î	 	î î î î# #î$ $ñî   î î î î5 5î6 5ñî   î î î î% %î& &ñî   î î î î î ëî  êêêêíî7 î9 íî;  î= "íî= #îÃB (íî> $îÃC )íî7 î9 íî î íî4 /î8 3íî7 4î9 6ìî  î! î" ìî8 î9 î: ìî 0î  0î" 0óî 1î 1î 1	î 1î 1î 1î 1íî 2î	 2ñî 4î 4î& 4#î' 4$î* 4'î, 4)ìî 5î	 5î
 5ìî 7î 7î 7‹ î 9î 9
î 9î 9 î  9$î* 9.î+ 9/î, 90î. 92î2 96î3 97î; 9?î= 9ÃAîÃA 9ÃEîÃB 9ÃFîÃN 9ÃRîÃO 9ÃSîÃP 9ÃTùî :î :î :	î :î :î% :î& :î- :%î/ :'î0 :(î2 :2î4 :4î6 :6óî ;î ;î ;î ;î ;î ;î  ;öî <î <
î <î! <î" <î& <î' <î. <$î/ <%î0 <%ôî =î =
î =î =î  =î$ =î% =î1 =%î2 =%îî >î >î >î >ñî ?î ?î ?	î ?î ?î ?íî ÃBî	 ÃBïî ÃCî ÃCî ÃCî  ÃC!î" ÃC#ïî ÃDî ÃD
î ÃDî ÃDî ÃDîî ÃEî ÃE	î ÃEî  ÃEöî ÃFî ÃFî ÃFî ÃFî ÃFî ÃFî" ÃFî# ÃFî% ÃFî' ÃFìî ÃGî ÃGî ÃGíî ÃHî	 ÃHïî ÃJî ÃJî  ÃJî" ÃJî$ ÃJ!óî ÃKî ÃKî ÃKî ÃKî ÃKî ÃKî ÃK‹ î ÃLî ÃL
î ÃLî ÃLî ÃLî) ÃLî* ÃL î. ÃL$î/ ÃL%î; ÃL1î< ÃL2îÃA ÃL7îÃB ÃL8îÃD ÃL:îÃG ÃL=îÃI ÃL?úî ÃMî ÃMî ÃMî% ÃMî& ÃMî, ÃM î- ÃM!î2 ÃM&î4 ÃM(î5 ÃM)î6 ÃM*î7 ÃM+ôî ÃNî ÃNî ÃNî! ÃNî$ ÃNî( ÃNî) ÃNî5 ÃN)î6 ÃN*ñî ÃOî ÃOî ÃOî$ ÃOî& ÃOî' ÃOîî ÃPî ÃPî ÃPî ÃP	ëî ÃQíî ÃRî	 ÃRìî ÃSî ÃSî ÃS‹ î ÃTî ÃTî ÃTî ÃTî% ÃTî) ÃT!î* ÃT"î. ÃT&î2 ÃT*î3 ÃT+îÃC ÃT;îÃF ÃT>îÃJ ÃTÃBîÃK ÃTÃCîÃS ÃTÃKîÃT ÃTÃLîÃZ ÃTÃRîÃ\ ÃTÃTíî ÃUî ÃUùî ÃVî ÃVî# ÃVî& ÃVî* ÃV î+ ÃV!î3 ÃV)î4 ÃV*î8 ÃV.î9 ÃV/îÃI ÃV?îÃJ ÃVÃ@îÃK ÃVÃAíî ÃXî/ ÃX%‹ (î ÃYî ÃYî# ÃYî& ÃYî* ÃY î4 ÃY*î5 ÃZîÃB ÃZîÃC ÃZîÃE ÃZîÃG Ã[îÃK Ã[îÃL Ã[îÃT Ã[îÃV Ã\îÃZ Ã\îÃ[ Ã\îÃg Ã\îÃi Ã]îÃv Ã]îÃw Ã]îÃ} Ã]îÃ Ã^îÃå Ã^îÃç Ã^îÃí Ã^îÃî Ã_îÃ° Ã_îÃ¢ Ã_îÃÆ Ã_"îÃ∞ Ã`îÃΩ Ã`îÃæ Ã`îÃ« Ã`îÃ… ÃaîÃ÷ ÃaîÃ◊ ÃaîÃ‡ ÃaîÃ· ÃbîÃ‚ Ãbíî Ãdî Ãdùî Ãeî Ãe
î Ãeî Ãeî Ãeî) Ãeî* Ãe î7 Ãe-î9 Ãe/î: Ãe0îÃ@ Ãe?îÃB ÃeÃAîÃD ÃeÃCîî Ãfî Ãfî Ãfî  Ãfíî Ãg
î! Ãgñî Ãh
î Ãhî Ãhî% Ãhî' Ãhî( Ãhëî Ãi	ñî Ãjî Ãjî Ãjî$ Ãjî& Ãjî' Ãjîî Ãkî Ãkî Ãkî Ãk	ëî Ãlíî Ãmî	 Ãmïî Ãoî Ãoî$ Ão!î& Ão#î( Ão%óî Ãpî Ãpî Ãp	î! Ãpî$ Ãpî) Ãp!î* Ãp"ûî Ãqî Ãqî Ãqî Ãqî Ãqî Ãqî# Ãqî& Ãqî* Ãq"î+ Ãq#î3 Ãq+î4 Ãq,î: Ãq2î< Ãq4õî Ãrî Ãrî Ãrî Ãrî# Ãrî$ Ãrî, Ãr"î- Ãr#î2 Ãr(î3 Ãr)î4 Ãr*ôî Ãsî Ãs
î Ãsî Ãsî  Ãsî& Ãsî' Ãsî+ Ãs!î, Ãs"ôî Ãtî Ãt
î Ãtî! Ãtî$ Ãtî* Ãt î+ Ãt!î6 Ãt,î7 Ãt-íî Ãvî! Ãv‹ î Ãwî Ãwî Ãwî Ãwî Ãwî" Ãwî$ ÃwîÃG Ãw=îÃK ÃwÃAîÃL ÃwÃBîÃU ÃwÃKîÃV ÃwÃLîÃ\ ÃwÃRîÃ] ÃwÃSîÃ_ ÃwÃUîÃ` ÃwÃVîÃa ÃwÃWëî Ãxóî Ãyî Ãyî Ãy	î Ãyî" Ãyî& Ãyî' Ãyíî Ãzî	 Ãzìî Ã|î Ã|î Ã|ôî Ã}î Ã}î Ã}î Ã}î% Ã}î* Ã}!î+ Ã}"î, Ã}#î. Ã}%ùî Ã~î Ã~î Ã~î Ã~î! Ã~î" Ã~î. Ã~$î/ Ã~%î3 Ã~)î4 Ã~*îÃD Ã~:îÃE Ã~;îÃF Ã~<íî ÃÄî/ ÃÄ%‹ (î ÃÅî ÃÅî! ÃÅî$ ÃÅî( ÃÅî2 ÃÅ(î3 ÃÇî7 ÃÇî8 ÃÇî: ÃÇî< ÃÉîÃ@ ÃÉîÃA ÃÉîÃI ÃÉîÃK ÃÑîÃO ÃÑîÃP ÃÑîÃ\ ÃÑîÃ^ ÃÖîÃb ÃÖîÃc ÃÖîÃi ÃÖîÃk ÃÜîÃo ÃÜîÃp ÃÜîÃu ÃÜîÃw ÃáîÃ{ ÃáîÃ| ÃáîÃà ÃáîÃä ÃàîÃé ÃàîÃè ÃàîÃò ÃàîÃö ÃâîÃû ÃâîÃü ÃâîÃ® ÃâîÃ© ÃäîÃ™ Ãäùî Ãåî Ãå
î Ãåî Ãåî Ãåî) Ãåî* Ãå î5 Ãå+î7 Ãå-î8 Ãå.î> Ãå=îÃ@ Ãå?îÃB ÃåÃAîî Ãçî Ãçî Ãçî  Ãçíî Ãé
î! Ãéñî Ãè
î Ãèî Ãèî% Ãèî' Ãèî( Ãèëî Ãê	ñî Ãëî Ãëî Ãëî$ Ãëî& Ãëî' Ãëîî Ãíî Ãíî Ãíî Ãí	ëî Ãìíî Ãîî	 Ãîíî9 Ãïî; Ãï íî Ãñî Ãñêìî Ãóî Ãóî  Ãóóî Ãòî Ãòî Ãò	î Ãòî" Ãòî' Ãòî( Ãòóî Ãôî Ãôî Ãô	î Ãôî Ãôî  Ãôî! Ãôóî Ãöî Ãöî Ãö	î  Ãöî# Ãöî( Ãö î) Ãö óî Ãõî Ãõî Ãõ	î Ãõî Ãõî Ãõî Ãõóî Ãúî Ãúî Ãú	î Ãúî  Ãúî" Ãúî# Ãúòî Ãùî Ãùî Ãù	î! Ãùî$ Ãùî% Ãùî& Ãùî' Ãùíî Ãûî	 Ãûìî Ãøî Ãøî Ãøöî Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î Ã¿î$ Ã¿î' Ã¿î( Ã¿ î* Ã¿"ñî Ã¡î Ã¡
î Ã¡î Ã¡î Ã¡î Ã¡íî Ã¬î Ã¬öî Ã√î Ã√
î Ã√î Ã√î% Ã√î& Ã√î, Ã√"î/ Ã√%î0 Ã√&î2 Ã√(öî Ãƒî Ãƒî Ãƒî% Ãƒî& Ãƒî- Ãƒ!î. Ãƒ"î4 Ãƒ(î5 Ãƒ)î7 Ãƒ+òî Ã≈
î Ã≈î" Ã≈î# Ã≈î% Ã≈î( Ã≈î- Ã≈î/ Ã≈!óî Ã∆î! Ã∆î$ Ã∆î* Ã∆î+ Ã∆î- Ã∆î. Ã∆ëî Ã«îî Ã»î Ã»	î Ã»
î Ã»ëî Ã…íî ÃÀî ÃÀ‹ î ÃÃî ÃÃî ÃÃî  ÃÃî$ ÃÃî. ÃÃ$î/ ÃÃ%î4 ÃÃ*î7 ÃÃ-î8 ÃÃ.î: ÃÃ0î> ÃÃ4î? ÃÃ5îÃG ÃÃ=îÃI ÃÃ?îÃM ÃÃÃCîÃN ÃÃÃDîÃZ ÃÃÃPîÃ[ ÃÃÃQîÃ\ ÃÃÃRùî ÃŒî ÃŒ
î ÃŒî ÃŒî ÃŒî) ÃŒî* ÃŒ î1 ÃŒ'î3 ÃŒ)î4 ÃŒ*î: ÃŒÃBî< ÃŒÃDî> ÃŒÃFîî Ãœî Ãœî Ãœî  Ãœíî Ã–
î! Ã–ñî Ã—
î Ã—î Ã—î% Ã—î' Ã—î( Ã—ëî Ã“	ñî Ã”î Ã”î Ã”î$ Ã”î& Ã”î' Ã”îî Ã‘î Ã‘î Ã‘î Ã‘	ëî Ã’íî Ã÷î	 Ã÷êêêêëî &êêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî !î &êêíî !î &êêíî $î ,êêíî $î ,êêíî 	î êêíî 	î êêíî !î !öî "î "î "î "î "î "î  "î$ "î% "î' "ôî #î #
î #î #î #î  #î! #î- #%î. #%ñî $î $
î $î $î  $î! $ëî	 %ëî %	ñî &î &
î &î &"î &$î  &$ôî 'î '
î 'î! 'î% 'î) '"î* '#î6 '/î8 '0ùî (î (î (î (î# (î$ (î, (#î- ($î1 ((î2 ()î: (1î; (2î= (3òî )
î )î )î# )î$ )î. )$î/ )%î0 )%ëî *	ëî +óî ,î ,
î ,î ,î ,î& ,î' ,ëî	 -íî .î .íî Ãï	î Ãïêêíî Ãï	î Ãïêêíî Ã†î Ã†íî Ã°î Ã°óî Ã¢î Ã¢î Ã¢	î Ã¢î Ã¢î Ã¢î Ã¢óî Ã£î Ã£î Ã£	î Ã£î Ã£î Ã£î Ã£óî Ã§î Ã§î Ã§	î Ã§î Ã§î Ã§î Ã§óî Ã•î Ã•î Ã•	î Ã•î Ã•î Ã•î Ã•óî Ã¶î Ã¶î Ã¶	î Ã¶î Ã¶î# Ã¶î$ Ã¶óî Ãßî Ãßî Ãß	î Ãßî Ãßî$ Ãß î% Ãß óî Ã®î Ã®î Ã®	î Ã®î Ã®î Ã®î Ã®òî Ã©î Ã©î Ã©	î Ã©î  Ã©î! Ã©î" Ã©î# Ã©óî Ã™î Ã™î Ã™	î Ã™î Ã™î Ã™î Ã™óî Ã´î Ã´î Ã´	î Ã´î Ã´î Ã´î Ã´íî Ã≠î Ã≠ôî ÃÆî ÃÆî ÃÆ	î ÃÆî ÃÆî" ÃÆî# ÃÆî& ÃÆ"î( ÃÆ$öî ÃØî ÃØî ÃØî ÃØî ÃØî ÃØî  ÃØîÃA ÃØ;îÃB ÃØ<îÃC ÃØ=ñî Ã∞î Ã∞
î Ã∞î Ã∞î Ã∞î Ã∞îî Ã±î	 Ã±î
 Ã±î Ã±íî Ã≤î Ã≤íî Ã¥î Ã¥íî Ãµî Ãµ
õî Ã∂î Ã∂î Ã∂	î Ã∂î Ã∂î Ã∂î Ã∂î Ã∂î$ Ã∂.î& Ã∂0î( Ã∂2ûî Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î Ã∑î  Ã∑î* Ã∑$î0 Ã∑*î1 Ã∑+î7 Ã∑1îÃO Ã∑ÃIîÃP Ã∑ÃJîÃQ Ã∑ÃKóî Ãπî Ãπ
î Ãπî Ãπî  Ãπî& Ãπ î' Ãπ!ôî Ã∫î Ã∫
î Ã∫î Ã∫î Ã∫î  Ã∫î! Ã∫î- Ã∫'î. Ã∫(îî Ãªî	 Ãªî
 Ãªî Ãªíî Ãºî Ãºíî Ãÿî Ãÿíî ÃŸî ÃŸíî Ã⁄î Ã⁄ïî Ã€î Ã€î Ã€î Ã€î Ã€ñî Ã‹î Ã‹
î Ã‹î Ã‹î Ã‹î  Ã‹öî Ã›î Ã›î Ã›î Ã›î Ã›î. Ã›&î/ Ã›'î< Ã›4î> Ã›6î? Ã›7öî Ãﬁî Ãﬁî Ãﬁî Ãﬁî Ãﬁî" Ãﬁî$ ÃﬁîÃ@ Ãﬁ8îÃA Ãﬁ9îÃB Ãﬁ:ëî Ãﬂñî Ã‡î	 Ã‡î Ã‡î Ã‡
î Ã‡î Ã‡íî Ã·î Ã·ëî Ã„êíî Ã‰î Ã‰
êñî Ã‰î Ã‰
î Õ î Õ 
î Õ î Õ ñî Ã‰î Ã‰
î Õ!î Õ!î Õ!î  Õ!êêíî ÃÂî ÃÂ	êòî ÃÂî ÃÂ	î Ãıî Ãıî Ãıî( Ãıî) Ãı î5 Ãı,ñî ÃÂî ÃÂ	î Ãˆî Ãˆî Ãˆî Ãˆûî ÃÂî ÃÂ	î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î Ã˜î$ Ã˜î& Ã˜î, Ã˜#î. Ã˜%î4 Ã˜+î6 Ã˜-êêîî ÃÁî ÃÁî ÃÁî ÃÁêñî ÃÁî ÃÁî ÃËî ÃËî ÃËî ÃËñî ÃÁî ÃÁî ÃÈî ÃÈî ÃÈî  ÃÈêíî ÃÁî ÃÁêíî ÃÏî ÃÏêñî ÃÏî ÃÏî ÃÌî ÃÌî ÃÌî ÃÌñî ÃÏî ÃÏî ÃÓî ÃÓî ÃÓî ÃÓóî ÃÏî ÃÏî ÃÔî ÃÔî ÃÔî ÃÔî ÃÔôî Ãî Ãî Ãî$ Ã î' Ã#î+ Ã'î, Ã(î- Ã)î7 Ã3ôî ÃÒî ÃÒî ÃÒî ÃÒî  ÃÒî" ÃÒî# ÃÒî$ ÃÒ î0 ÃÒ,óî ÃÚî ÃÚî ÃÚî! ÃÚî$ ÃÚ î& ÃÚ"î' ÃÚ#íî ÃÛ
î ÃÛêíî ÃÂî ÃÂ	êêíî Ã¯î% Ã¯ñî Ã˘î Ã˘
î Ã˘î Ã˘î# Ã˘î% Ã˘êêêêìî8 Ã˙îÃB Ã˙îÃI Ã˙ìî$ Ã˚
î, Ã˚î= Ã˚!ìî$ Ã¸
î0 Ã¸îÃE Ã¸)ñî$ Ã˝
î+ Ã˝î- Ã˝î1 Ã˝î2 Ã˝î= Ã˝#ñî$ Ã˛
î* Ã˛î, Ã˛î0 Ã˛î1 Ã˛î9 Ã˛ëî! Ãˇ	êêêíî( Ã˚
î0 Ã˚íî( Ã¸
î4 Ã¸ñî( Ã˝
î/ Ã˝î1 Ã˝î5 Ã˝î6 Ã˝îÃA Ã˝#ñî( Ã˛
î. Ã˛î0 Ã˛î4 Ã˛î5 Ã˛î= Ã˛êêêêêêêêêêëî Õ êêêëî Õ êêêêñî Õî Õ
î Õî Õî$ Õî& Õ êêêêìî8 ÕîÃA ÕîÃH Õìî$ Õ
î, Õî= Õ!ìî$ Õ
î0 ÕîÃE Õ)ñî$ Õ
î+ Õî- Õî1 Õî2 Õî= Õ#ñî$ Õ
î, Õî. Õî2 Õî3 Õî= Õ#ëî! Õ	êêêíî( Õ
î0 Õíî( Õ
î4 Õñî( Õ
î/ Õî1 Õî5 Õî6 ÕîÃA Õ#ñî( Õ
î0 Õî2 Õî6 Õî7 ÕîÃA Õ#êêêêêêêêêêëî Õêêêëî Õêêêêêùî, Õ	î8 Õ	î? Õ	îÃA Õ	îÃI Õ	îÃZ Õ	&îÃ\ Õ	'îÃi Õ	4îÃk Õ	5îÃo Õ	9îÃp Õ	:îÃ} Õ	ÃGîÃ Õ	ÃHêêêíî Õ	î$ Õ	ñî Õ	'î) Õ	4î+ Õ	5î/ Õ	9î0 Õ	:î= Õ	ÃGêêêêêêêêêêíî Õî Õêêêíî Õî Õêêêíî Õ
î Õíî3 Õî8 Õ,êêêêìî4 Õî> ÕîÃE Õîî  Õî$ Õî& Õî* Õîî  Õî% Õî' Õî, Õûî  Õî( Õî* Õî+ Õî. Õî0 Õ&î2 Õ(î3 Õ)î7 Õ-î8 Õ.îÃB Õ8îÃC Õ9îÃF Õ<îÃG Õ=ûî  Õî, Õî. Õî/ Õî2 Õ"î4 Õ*î6 Õ,î7 Õ-î; Õ1î< Õ2îÃJ ÕÃ@îÃK ÕÃAîÃN ÕÃDîÃO ÕÃEëî Õêêêîî$ Õî( Õî* Õî. Õîî$ Õî) Õî+ Õî0 Õûî$ Õî, Õî. Õî/ Õî2 Õî4 Õ&î6 Õ(î7 Õ)î; Õ-î< Õ.îÃF Õ8îÃG Õ9îÃJ Õ<îÃK Õ=ûî$ Õî0 Õî2 Õî3 Õî6 Õ"î8 Õ*î: Õ,î; Õ-î? Õ1îÃ@ Õ2îÃN ÕÃ@îÃO ÕÃAîÃR ÕÃDîÃS ÕÃEêêêêêêîî  Õî$ Õî& Õî* Õêêêêêôî/ Õî3 Õî4 Õî< ÕîÃV ÕîÃW ÕîÃ[ ÕîÃ] ÕîÃ_ Õ!ñî Õî Õî Õî Õî  Õî! Õíî Õî Õêíî Õ
î Õíî Õî Õíî Õî Õíî Ã‰î Ã‰
ëî Õ"íî Õ%î Õ%ñî Õ&î Õ&î Õ&î Õ&î Õ&!î Õ&!üî Õ'î Õ'î Õ'î Õ'î Õ'î! Õ'î" Õ'î& Õ' î' Õ'!î( Õ'"î) Õ'#î+ Õ'$î, Õ'%î. Õ'&î0 Õ'(ñî Õ(î Õ(	î Õ(î Õ(î Õ(î Õ(öî Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î Õ)î  Õ)î" Õ)î# Õ)ëî Õ*ëî Õ*öî Õ+î Õ+î Õ+î Õ+î Õ+î Õ+î Õ+î  Õ+î" Õ+î# Õ+ëî Õ,îî Õ-î	 Õ-î
 Õ-î Õ-óî Õ.î Õ.î Õ.	î Õ.î Õ.î! Õ.î" Õ.íî Õ/î Õ/‘rGñßversion§fileßsourcesÆsourcesContent•names®mappings¿ë¿ë¿ê‹ëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ëî  Ãg ëî  Ãh ëî  Ãi ëî  Ãj ëî  Ãk ëî  Ãl ëî  Ãm ëî  Ãn ëî  Ão ëî  Ãp ëî  Ãq ëî  Ãr ëî  Ãs ëî  Ãt ëî  Ãu ëî  Ãv ëî  Ãw ëî  Ãx ëî  Ãy ëî  Ãz ëî  Ã{ ëî  Ã| ëî  Ã} ëî  Ã~ ëî  Ã ëî  ÃÄ ëî  ÃÅ ëî  ÃÇ ëî  ÃÉ ëî  ÃÑ ëî  ÃÖ ëî  ÃÜ ëî  Ãá ëî  Ãà ëî  Ãâ ëî  Ãä ëî  Ãã ëî  Ãå ëî  Ãç ëî  Ãé ëî  Ãè ëî  Ãê ëî  Ãë ëî  Ãí ëî  Ãì ëî  Ãî ëî  Ãï ëî  Ãñ ëî  Ãó ëî  Ãò ëî  Ãô ëî  Ãö ëî  Ãõ ëî  Ãú ëî  Ãù ëî  Ãû ëî  Ãü ëî  Ã† ëî  Ã° ëî  Ã¢ ëî  Ã£ ëî  Ã§ ëî  Ã• ëî  Ã¶ ëî  Ãß ëî  Ã® ëî  Ã© ëî  Ã™ ëî  Ã´ ëî  Ã¨ ëî  Ã≠ ëî  ÃÆ ëî  ÃØ ëî  Ã∞ ëî  Ã± ëî  Ã≤ ëî  Ã≥ ëî  Ã¥ ëî  Ãµ ëî  Ã∂ ëî  Ã∑ ëî  Ã∏ ëî  Ãπ ëî  Ã∫ ëî  Ãª ëî  Ãº ëî  ÃΩ ëî  Ãæ ëî  Ãø ëî  Ã¿ ëî  Ã¡ ëî  Ã¬ ëî  Ã√ ëî  Ãƒ ëî  Ã≈ ëî  Ã∆ ëî  Ã« ëî  Ã» ëî  Ã… ëî  Ã  ëî  ÃÀ ëî  ÃÃ ëî  ÃÕ ëî  ÃŒ ëî  Ãœ ëî  Ã– ëî  Ã— ëî  Ã“ ëî  Ã” ëî  Ã‘ ëî  Ã’ ëî  Ã÷ ëî  Ã◊ ëî  Ãÿ ëî  ÃŸ ëî  Ã⁄ ëî  Ã€ ëî  Ã‹ ëî  Ã› ëî  Ãﬁ ëî  Ãﬂ ëî  Ã‡ ëî  Ã· ëî  Ã‚ ëî  Ã„ ëî  Ã‰ ëî  ÃÂ ëî  ÃÊ ëî  ÃÁ ëî  ÃË ëî  ÃÈ ëî  ÃÍ ëî  ÃÎ ëî  ÃÏ ëî  ÃÌ ëî  ÃÓ ëî  ÃÔ ëî  Ã ëî  ÃÒ ëî  ÃÚ ëî  ÃÛ ëî  ÃÙ ëî  Ãı ëî  Ãˆ ëî  Ã˜ ëî  Ã¯ ëî  Ã˘ ëî  Ã˙ ëî  Ã˚ ëî  Ã¸ ëî  Ã˝ ëî  Ã˛ ëî  Ãˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ëî  Õ˙ ëî  Õ˚ ëî  Õ¸ ëî  Õ˝ ëî  Õ˛ ëî  Õˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ‘rHíßmissing¶plugin√¶genAbc¬ê‘  ‘rIî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêêò‘rJï§type•start£end™specifiers¶source±ImportDeclarationÃÄÃ™ë‘rKï§type•start£end®imported•localØImportSpecifierÃâÃì‘rLî§type•start£end§name™IdentifierÃâÃì™EditDialogL™IdentifierÃâÃì™EditDialog‘rMï§type•start£end•value£rawßLiteralÃõÃ©¨./EditDialogÆ'./EditDialog'J±ImportDeclarationÃ¨Ã‘ëKØImportSpecifierÃµÃæL™IdentifierÃµÃæ©AddDialogL™IdentifierÃµÃæ©AddDialogMßLiteralÃ∆Ã”´./AddDialog≠'./AddDialog'J±ImportDeclarationÃ÷Õ ë‘rNî§type•start£end•local∂ImportDefaultSpecifierÃ›ÃÈL™IdentifierÃ›ÃÈ¨DeviceSearchMßLiteralÃÔÃˇÆ./DeviceSearch∞'./DeviceSearch'J±ImportDeclarationÕÕ3ëN∂ImportDefaultSpecifierÕ	ÕL™IdentifierÕ	Õ™DeviceDateMßLiteralÕÕ2∑../viewmodel/DeviceDataπ'../viewmodel/DeviceData'J±ImportDeclarationÕ5ÕfëN∂ImportDefaultSpecifierÕ<ÕFL™IdentifierÕ<ÕF™DeviceItemMßLiteralÕLÕe∑../viewmodel/DeviceItemπ'../viewmodel/DeviceItem'J±ImportDeclarationÕhÕåëKØImportSpecifierÕqÕwL™IdentifierÕqÕw¶routerL™IdentifierÕqÕw¶routerMßLiteralÕÕã™@kit.ArkUI¨'@kit.ArkUI'J±ImportDeclarationÕéÕƒëN∂ImportDefaultSpecifierÕïÕûL™IdentifierÕïÕû©MemoTableMßLiteralÕ§Õ√Ωets/common/database/MemoTableø'ets/common/database/MemoTable'J±ImportDeclarationÕ∆ÕÏëN∂ImportDefaultSpecifierÕÕÕ”L™IdentifierÕÕÕ”¶LoggerMßLiteralÕŸÕÎ∞ets/utils/Logger≤'ets/utils/Logger'