‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄Ç\if (!("finalizeConstruction" in ViewPU.prototype)) {
    Reflect.set(ViewPU.prototype, "finalizeConstruction", () => { });
}
import { promptAction } from '@kit.ArkUI';
import DeviceDate from '../viewmodel/DeviceData';
import MemoTable from 'ets/common/database/MemoTable';
import { router } from '@kit.ArkUI';
import Logger from 'ets/utils/Logger';
import preferences from '@ohos.data.preferences';
import axios from '@ohos/axios';
import LogUtils from 'ets/utils/Logger';
import CommonConstants from '../common/constants/CommonConstants';
// ÂàõÂª∫ axios ÂÆû‰æã
const instance = axios.create({
    baseURL: "http://10.33.86.16:8080",
    timeout: 5000,
});
class AutoSettingDialog extends ViewPU {
    constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) {
        super(parent, __localStorage, elmtId, extraInfo);
        if (typeof paramsLambda === "function") {
            this.paramsGenerator_ = paramsLambda;
        }
        this.__intervalTime = new ObservedPropertySimplePU(" ", this, "intervalTime");
        this.__positionX = new ObservedPropertySimplePU(" ", this, "positionX");
        this.__positionY = new ObservedPropertySimplePU(" ", this, "positionY");
        this.__autoMode = new ObservedPropertySimplePU(false, this, "autoMode");
        this.controller = undefined;
        this.onSave = () => { };
        this.setInitiallyProvidedValue(params);
        this.finalizeConstruction();
    }
    setInitiallyProvidedValue(params) {
        if (params.intervalTime !== undefined) {
            this.intervalTime = params.intervalTime;
        }
        if (params.positionX !== undefined) {
            this.positionX = params.positionX;
        }
        if (params.positionY !== undefined) {
            this.positionY = params.positionY;
        }
        if (params.autoMode !== undefined) {
            this.autoMode = params.autoMode;
        }
        if (params.controller !== undefined) {
            this.controller = params.controller;
        }
        if (params.onSave !== undefined) {
            this.onSave = params.onSave;
        }
    }
    updateStateVars(params) {
    }
    purgeVariableDependenciesOnElmtId(rmElmtId) {
        this.__intervalTime.purgeDependencyOnElmtId(rmElmtId);
        this.__positionX.purgeDependencyOnElmtId(rmElmtId);
        this.__positionY.purgeDependencyOnElmtId(rmElmtId);
        this.__autoMode.purgeDependencyOnElmtId(rmElmtId);
    }
    aboutToBeDeleted() {
        this.__intervalTime.aboutToBeDeleted();
        this.__positionX.aboutToBeDeleted();
        this.__positionY.aboutToBeDeleted();
        this.__autoMode.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id__());
        this.aboutToBeDeletedInternal();
    }
    get intervalTime() {
        return this.__intervalTime.get();
    }
    set intervalTime(newValue) {
        this.__intervalTime.set(newValue);
    }
    get positionX() {
        return this.__positionX.get();
    }
    set positionX(newValue) {
        this.__positionX.set(newValue);
    }
    get positionY() {
        return this.__positionY.get();
    }
    set positionY(newValue) {
        this.__positionY.set(newValue);
    }
    get autoMode() {
        return this.__autoMode.get();
    }
    set autoMode(newValue) {
        this.__autoMode.set(newValue);
    }
    setController(ctr) {
        this.controller = ctr;
    }
    initialRender() {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Page.ets(37:5)", "entry");
            Column.padding(10);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create("Êó∂Èó¥Èó¥Èöî");
            Text.debugLine("entry/src/main/ets/view/Page.ets(38:7)", "entry");
            Text.fontSize(16);
            Text.margin({ bottom: 8, top: 20 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            TextInput.create({ placeholder: "ËæìÂÖ•Êó∂Èó¥", text: this.intervalTime });
            TextInput.debugLine("entry/src/main/ets/view/Page.ets(42:7)", "entry");
            TextInput.width('80%');
            TextInput.onChange((value) => {
                this.intervalTime = value;
            });
        }, TextInput);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create("X ‰ΩçÁΩÆ");
            Text.debugLine("entry/src/main/ets/view/Page.ets(48:7)", "entry");
            Text.fontSize(16);
            Text.margin({ top: 16, bottom: 8 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            TextInput.create({ placeholder: "ËæìÂÖ•XÂùêÊ†á", text: this.positionX.toString() });
            TextInput.debugLine("entry/src/main/ets/view/Page.ets(52:7)", "entry");
            TextInput.width('80%');
            TextInput.onChange((value) => {
                this.positionX = value;
            });
        }, TextInput);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create("Y ‰ΩçÁΩÆ");
            Text.debugLine("entry/src/main/ets/view/Page.ets(58:7)", "entry");
            Text.fontSize(16);
            Text.margin({ top: 16, bottom: 8 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            TextInput.create({ placeholder: "ËæìÂÖ•YÂùêÊ†á", text: this.positionY.toString() });
            TextInput.debugLine("entry/src/main/ets/view/Page.ets(62:7)", "entry");
            TextInput.width('80%');
            TextInput.onChange((value) => {
                this.positionY = value;
            });
        }, TextInput);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/view/Page.ets(68:7)", "entry");
            Row.justifyContent(FlexAlign.SpaceBetween);
            Row.margin({ top: 20, bottom: 20 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel("ÂèñÊ∂à");
            Button.debugLine("entry/src/main/ets/view/Page.ets(69:9)", "entry");
            Button.onClick(() => this.controller?.close());
            Button.margin({ right: 8 });
        }, Button);
        Button.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel("‰øùÂ≠ò");
            Button.debugLine("entry/src/main/ets/view/Page.ets(73:9)", "entry");
            Button.onClick(() => {
                this.onSave(this.intervalTime, this.positionX, this.positionY, this.autoMode);
                this.controller?.close();
            });
        }, Button);
        Button.pop();
        Row.pop();
        Column.pop();
    }
    rerender() {
        this.updateDirtyElements();
    }
}
class ManualSettingDialog extends ViewPU {
    constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) {
        super(parent, __localStorage, elmtId, extraInfo);
        if (typeof paramsLambda === "function") {
            this.paramsGenerator_ = paramsLambda;
        }
        this.__positionX = new ObservedPropertySimplePU(" ", this, "positionX");
        this.__positionY = new ObservedPropertySimplePU(" ", this, "positionY");
        this.controller = undefined;
        this.onLaunch = () => { };
        this.uiContext = this.getUIContext();
        this.TAG = 'ManualSettingDialog';
        this.setInitiallyProvidedValue(params);
        this.finalizeConstruction();
    }
    setInitiallyProvidedValue(params) {
        if (params.positionX !== undefined) {
            this.positionX = params.positionX;
        }
        if (params.positionY !== undefined) {
            this.positionY = params.positionY;
        }
        if (params.controller !== undefined) {
            this.controller = params.controller;
        }
        if (params.onLaunch !== undefined) {
            this.onLaunch = params.onLaunch;
        }
        if (params.uiContext !== undefined) {
            this.uiContext = params.uiContext;
        }
        if (params.TAG !== undefined) {
            this.TAG = params.TAG;
        }
    }
    updateStateVars(params) {
    }
    purgeVariableDependenciesOnElmtId(rmElmtId) {
        this.__positionX.purgeDependencyOnElmtId(rmElmtId);
        this.__positionY.purgeDependencyOnElmtId(rmElmtId);
    }
    aboutToBeDeleted() {
        this.__positionX.aboutToBeDeleted();
        this.__positionY.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id__());
        this.aboutToBeDeletedInternal();
    }
    get positionX() {
        return this.__positionX.get();
    }
    set positionX(newValue) {
        this.__positionX.set(newValue);
    }
    get positionY() {
        return this.__positionY.get();
    }
    set positionY(newValue) {
        this.__positionY.set(newValue);
    }
    setController(ctr) {
        this.controller = ctr;
    }
    //
    // // Ê∑ªÂä†ÂìçÂ∫îÊã¶Êà™Âô®
    //
    //
    // // ÂèëÈÄÅÂèëÂ∞ÑËØ∑Ê±Ç
    // private async sendLaunchRequest(x: string, y: string) {
    //   LogUtils.info(this.TAG, `Attempting to send launch request with coordinates: x=${x}, y=${y}`);
    //
    //   // ËæìÂÖ•È™åËØÅ
    //   if (!x || !y) {
    //     LogUtils.warn(this.TAG, 'Invalid input: coordinates cannot be empty');
    //     const toastOpts: ToastOptions = {
    //       message: 'ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÂùêÊ†áÂÄº',
    //       duration: 2000
    //     };
    //     prompt.showToast(toastOpts);
    //     return;
    //   }
    //
    //   const horizonAngle = Number(x);
    //   const verticalAngle = Number(y);
    //
    //   if (isNaN(horizonAngle) || isNaN(verticalAngle)) {
    //     LogUtils.warn(this.TAG, `Invalid number format: x=${x}, y=${y}`);
    //     const toastOpts: ToastOptions = {
    //       message: 'ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞Â≠ó',
    //       duration: 2000
    //     };
    //     prompt.showToast(toastOpts);
    //     return;
    //   }
    //
    //   try {
    //     const requestData: GeneratedObjectLiteralInterface_1 = {
    //       target_device: "motor1",
    //       horizon_angle: horizonAngle,
    //       vertical_angle: verticalAngle
    //     };
    //
    //     LogUtils.info(this.TAG, `Sending request with data: ${JSON.stringify(requestData)}`);
    //
    //     const loadingToast: ToastOptions = {
    //       message: 'ÂèëÂ∞Ñ‰∏≠...',
    //       duration: 2000
    //     };
    //     prompt.showToast(loadingToast);
    //
    //
    //     LogUtils.info(this.TAG, `Launch request successful: ${JSON.stringify(requestData)}`);
    //
    //     const toastOpts: ToastOptions = {
    //       message: 'ÂèëÂ∞ÑÊàêÂäü',
    //       duration: 2000
    //     };
    //     prompt.showToast(toastOpts);
    //
    //     // ‰øùÂ≠ò‰ΩçÁΩÆÊï∞ÊçÆÂπ∂Ë∞ÉÁî®ÂõûË∞É
    //     LogUtils.info(this.TAG, `Saving coordinates: x=${x}, y=${y}`);
    //     this.onLaunch(x, y);
    //
    //   } catch (error) {
    //     LogUtils.error(this.TAG, `Launch request failed: ${error.message}`);
    //     LogUtils.error(this.TAG, `Error details: ${JSON.stringify(error)}`);
    //
    //     const toastOpts: ToastOptions = {
    //       message: `ÂèëÂ∞ÑÂ§±Ë¥•Ôºö${error.message || 'Êú™Áü•ÈîôËØØ'}`,
    //       duration: 2000
    //     };
    //     prompt.showToast(toastOpts);
    //   }
    // }
    //
    initialRender() {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Page.ets(173:5)", "entry");
            Column.padding(10);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create("X ‰ΩçÁΩÆ");
            Text.debugLine("entry/src/main/ets/view/Page.ets(174:7)", "entry");
            Text.fontSize(16);
            Text.margin({ top: 20, bottom: 8 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            TextInput.create({ placeholder: "ËæìÂÖ•XÂùêÊ†á", text: this.positionX.toString() });
            TextInput.debugLine("entry/src/main/ets/view/Page.ets(178:7)", "entry");
            TextInput.width('80%');
            TextInput.onChange((value) => {
                this.positionX = value;
                LogUtils.debug(this.TAG, `X coordinate changed to: ${value}`);
            });
        }, TextInput);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create("Y ‰ΩçÁΩÆ");
            Text.debugLine("entry/src/main/ets/view/Page.ets(185:7)", "entry");
            Text.fontSize(16);
            Text.margin({ top: 16, bottom: 8 });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            TextInput.create({ placeholder: "ËæìÂÖ•YÂùêÊ†á", text: this.positionY.toString() });
            TextInput.debugLine("entry/src/main/ets/view/Page.ets(189:7)", "entry");
            TextInput.width('80%');
            TextInput.onChange((value) => {
                this.positionY = value;
                LogUtils.debug(this.TAG, `Y coordinate changed to: ${value}`);
            });
        }, TextInput);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel("ÂèëÂ∞Ñ");
            Button.debugLine("entry/src/main/ets/view/Page.ets(196:7)", "entry");
            Button.onClick(() => {
                instance.post('/device/pub', {
                    target_device: "motor1",
                    horizon_angle: this.positionX,
                    vertical_angle: this.positionY
                }).then((response) => {
                    if (response.data.msg == 'success') {
                        //ÊàêÂäü‰∫Ü‰πãÂêé
                        promptAction.showToast({
                            message: 'ÂèëÈÄÅÊàêÂäü',
                            duration: 2000,
                            bottom: 50
                        });
                    }
                    else if (response.data.code == 0) {
                        promptAction.showToast({
                            message: response.data.msg,
                            duration: 2000,
                            bottom: 50
                        });
                    }
                });
            });
            Button.margin({ top: 20, bottom: 20 });
        }, Button);
        Button.pop();
        Column.pop();
    }
    rerender() {
        this.updateDirtyElements();
    }
}
class Page extends ViewPU {
    constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) {
        super(parent, __localStorage, elmtId, extraInfo);
        if (typeof paramsLambda === "function") {
            this.paramsGenerator_ = paramsLambda;
        }
        this.__intervalTime = new ObservedPropertySimplePU("", this, "intervalTime");
        this.__positionX = new ObservedPropertySimplePU("", this, "positionX");
        this.__positionY = new ObservedPropertySimplePU("", this, "positionY");
        this.__positionX1 = new ObservedPropertySimplePU("", this, "positionX1");
        this.__positionY1 = new ObservedPropertySimplePU("", this, "positionY1");
        this.__autoMode = new ObservedPropertySimplePU(false, this, "autoMode");
        this.deviceId = -1;
        this.MemoTable = new MemoTable(() => { });
        this.currentDevice = null;
        this.autoModePreference = null;
        this.autoDialogController = new CustomDialogController({
            builder: () => {
                let jsDialog = new AutoSettingDialog(this, {
                    intervalTime: this.intervalTime,
                    positionX: this.positionX,
                    positionY: this.positionY,
                    onSave: (time, x, y) => {
                        this.intervalTime = time;
                        this.positionX = x;
                        this.positionY = y;
                        this.saveDeviceSettings();
                    }
                }, undefined, -1, () => { }, { page: "entry/src/main/ets/view/Page.ets", line: 324, col: 14 });
                jsDialog.setController(this.autoDialogController);
                ViewPU.create(jsDialog);
                let paramsLambda = () => {
                    return {
                        intervalTime: this.intervalTime,
                        positionX: this.positionX,
                        positionY: this.positionY,
                        onSave: (time, x, y) => {
                            this.intervalTime = time;
                            this.positionX = x;
                            this.positionY = y;
                            this.saveDeviceSettings();
                        }
                    };
                };
                jsDialog.paramsGenerator_ = paramsLambda;
            }
        }, this);
        this.manualDialogController = new CustomDialogController({
            builder: () => {
                let jsDialog = new ManualSettingDialog(this, {
                    positionX: this.positionX1,
                    positionY: this.positionY1,
                    onLaunch: (x, y) => {
                        this.positionX1 = x;
                        this.positionY1 = y;
                        this.saveDeviceSettings();
                    }
                }, undefined, -1, () => { }, { page: "entry/src/main/ets/view/Page.ets", line: 338, col: 14 });
                jsDialog.setController(this.manualDialogController);
                ViewPU.create(jsDialog);
                let paramsLambda = () => {
                    return {
                        positionX: this.positionX1,
                        positionY: this.positionY1,
                        onLaunch: (x, y) => {
                            this.positionX1 = x;
                            this.positionY1 = y;
                            this.saveDeviceSettings();
                        }
                    };
                };
                jsDialog.paramsGenerator_ = paramsLambda;
            }
        }, this);
        this.setInitiallyProvidedValue(params);
        this.finalizeConstruction();
    }
    setInitiallyProvidedValue(params) {
        if (params.intervalTime !== undefined) {
            this.intervalTime = params.intervalTime;
        }
        if (params.positionX !== undefined) {
            this.positionX = params.positionX;
        }
        if (params.positionY !== undefined) {
            this.positionY = params.positionY;
        }
        if (params.positionX1 !== undefined) {
            this.positionX1 = params.positionX1;
        }
        if (params.positionY1 !== undefined) {
            this.positionY1 = params.positionY1;
        }
        if (params.autoMode !== undefined) {
            this.autoMode = params.autoMode;
        }
        if (params.deviceId !== undefined) {
            this.deviceId = params.deviceId;
        }
        if (params.MemoTable !== undefined) {
            this.MemoTable = params.MemoTable;
        }
        if (params.currentDevice !== undefined) {
            this.currentDevice = params.currentDevice;
        }
        if (params.autoModePreference !== undefined) {
            this.autoModePreference = params.autoModePreference;
        }
        if (params.autoDialogController !== undefined) {
            this.autoDialogController = params.autoDialogController;
        }
        if (params.manualDialogController !== undefined) {
            this.manualDialogController = params.manualDialogController;
        }
    }
    updateStateVars(params) {
    }
    purgeVariableDependenciesOnElmtId(rmElmtId) {
        this.__intervalTime.purgeDependencyOnElmtId(rmElmtId);
        this.__positionX.purgeDependencyOnElmtId(rmElmtId);
        this.__positionY.purgeDependencyOnElmtId(rmElmtId);
        this.__positionX1.purgeDependencyOnElmtId(rmElmtId);
        this.__positionY1.purgeDependencyOnElmtId(rmElmtId);
        this.__autoMode.purgeDependencyOnElmtId(rmElmtId);
    }
    aboutToBeDeleted() {
        this.__intervalTime.aboutToBeDeleted();
        this.__positionX.aboutToBeDeleted();
        this.__positionY.aboutToBeDeleted();
        this.__positionX1.aboutToBeDeleted();
        this.__positionY1.aboutToBeDeleted();
        this.__autoMode.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id__());
        this.aboutToBeDeletedInternal();
    }
    get intervalTime() {
        return this.__intervalTime.get();
    }
    set intervalTime(newValue) {
        this.__intervalTime.set(newValue);
    }
    get positionX() {
        return this.__positionX.get();
    }
    set positionX(newValue) {
        this.__positionX.set(newValue);
    }
    get positionY() {
        return this.__positionY.get();
    }
    set positionY(newValue) {
        this.__positionY.set(newValue);
    }
    get positionX1() {
        return this.__positionX1.get();
    }
    set positionX1(newValue) {
        this.__positionX1.set(newValue);
    }
    get positionY1() {
        return this.__positionY1.get();
    }
    set positionY1(newValue) {
        this.__positionY1.set(newValue);
    }
    get autoMode() {
        return this.__autoMode.get();
    }
    set autoMode(newValue) {
        this.__autoMode.set(newValue);
    }
    aboutToAppear() {
        // ÂàùÂßãÂåñÊú¨Âú∞Â≠òÂÇ®
        let context = getContext(this);
        preferences.getPreferences(context, 'deviceSettings')
            .then((pref) => {
            this.autoModePreference = pref;
            // ËØªÂèñ‰øùÂ≠òÁöÑËá™Âä®ÂºÄÂÖ≥Áä∂ÊÄÅ
            return this.autoModePreference.get(CommonConstants.AUTO_MODE_KEY, false);
        })
            .then((value) => {
            this.autoMode = Boolean(value);
        })
            .catch((err) => {
            Logger.error('Page', `Failed to get preferences: ${err}`);
        });
        // Ëé∑ÂèñË∑ØÁî±ÂèÇÊï∞‰∏≠ÁöÑËÆæÂ§áÁ¥¢Âºï
        let params = router.getParams();
        // Â∞ÜparamsËΩ¨Êç¢‰∏∫RouteParamsÁ±ªÂûã
        const routeParams = params;
        if (routeParams && routeParams.id !== undefined) {
            this.deviceId = routeParams.id;
            Logger.info('Page', `Loading device with ID: ${this.deviceId}`);
            // ÂàùÂßãÂåñÊï∞ÊçÆÂ∫ìÂπ∂Âä†ËΩΩËÆæÂ§áÊï∞ÊçÆ
            this.MemoTable.getRdbStore(() => {
                this.MemoTable.query((result) => {
                    for (let device of result) {
                        if (device.id === this.deviceId) {
                            this.currentDevice = device;
                            Logger.info('Page', `Found device: ${JSON.stringify(device)}`);
                            // ËÆæÁΩÆÈ°µÈù¢Áä∂ÊÄÅ
                            this.intervalTime = device.intervalTime || "";
                            this.positionX = device.positionX || "";
                            this.positionY = device.positionY || "";
                            this.positionX1 = device.positionX || "";
                            this.positionY1 = device.positionY || "";
                            break;
                        }
                    }
                });
            });
        }
    }
    // ‰øÆÊîπ‰øùÂ≠òËÆæÂ§áËÆæÁΩÆÁöÑÊñπÊ≥ï
    async saveDeviceSettings() {
        if (this.currentDevice) {
            // ‰øùÂ≠òËá™Âä®ÂºÄÂÖ≥Áä∂ÊÄÅÂà∞Êú¨Âú∞Â≠òÂÇ®
            if (this.autoModePreference) {
                try {
                    await this.autoModePreference.put(CommonConstants.AUTO_MODE_KEY, this.autoMode);
                    if (this.autoModePreference) {
                        await this.autoModePreference.flush();
                    }
                }
                catch (err) {
                    Logger.error('Page', `Failed to save auto mode state: ${err}`);
                }
            }
            // ‰øùÂ≠òÂÖ∂‰ªñËÆæÂ§áÊï∞ÊçÆÂà∞Êï∞ÊçÆÂ∫ì
            const updatedDevice = new DeviceDate(this.currentDevice.id, this.currentDevice.name, this.currentDevice.description, this.currentDevice.status, this.currentDevice.Color, this.intervalTime, this.autoMode ? this.positionX : this.positionX1, this.autoMode ? this.positionY : this.positionY1);
        }
    }
    initialRender() {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Page.ets(350:5)", "entry");
            Column.width('100%');
            Column.height('100%');
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/view/Page.ets(351:7)", "entry");
            Row.width('100%');
            Row.margin({ top: '48vp', bottom: '12vp' });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÂèëÂ∞ÑËÆæÁΩÆ');
            Text.debugLine("entry/src/main/ets/view/Page.ets(352:9)", "entry");
            Text.fontWeight(700);
            Text.fontSize('26fp');
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Page.ets(359:7)", "entry");
            Column.backgroundImage({ "id": 16777409, "type": 20000, params: [], "bundleName": "com.example.pageanddata", "moduleName": "entry" });
            Column.backgroundImageSize({ width: '100%', height: '100%' });
            Column.width('100%');
            Column.height('84%');
            Column.margin({ top: '20vp' });
            Column.borderRadius('40vp');
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Page.ets(361:9)", "entry");
            // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
            Column.width('90%');
            // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
            Column.padding(16);
            // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
            Column.border({ width: 2, color: "#1A8DFF" });
            // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
            Column.borderRadius(12);
            // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
            Column.backgroundColor(Color.White);
            // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
            Column.margin({ top: 100 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/view/Page.ets(362:11)", "entry");
            Row.justifyContent(FlexAlign.SpaceBetween);
            Row.width('100%');
            Row.alignItems(VerticalAlign.Center);
            Row.margin({ bottom: '12vp' });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('Ëá™Âä®');
            Text.debugLine("entry/src/main/ets/view/Page.ets(363:13)", "entry");
            Text.fontSize(18);
            Text.fontWeight(600);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Toggle.create({ type: ToggleType.Switch, isOn: this.autoMode });
            Toggle.debugLine("entry/src/main/ets/view/Page.ets(367:13)", "entry");
            Toggle.width(40);
            Toggle.height(24);
            Toggle.onChange((isOn) => {
                this.autoMode = isOn;
                this.saveDeviceSettings();
            });
        }, Toggle);
        Toggle.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`ÂèëÂ∞ÑÈó¥ÈöîÔºö${this.intervalTime}`);
            Text.debugLine("entry/src/main/ets/view/Page.ets(380:11)", "entry");
            Text.fontSize('16fp');
            Text.textAlign(TextAlign.Start);
            Text.width('100%');
            Text.margin({ bottom: '12vp' });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`‰ΩçÁΩÆÔºöX:${this.positionX} Y:${this.positionY}`);
            Text.debugLine("entry/src/main/ets/view/Page.ets(386:11)", "entry");
            Text.fontSize('16fp');
            Text.textAlign(TextAlign.Start);
            Text.width('100%');
            Text.margin({ bottom: '12vp' });
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/view/Page.ets(392:11)", "entry");
            Row.justifyContent(FlexAlign.End);
            Row.alignItems(VerticalAlign.Center);
            Row.width('100%');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Image.create({ "id": 16777422, "type": 20000, params: [], "bundleName": "com.example.pageanddata", "moduleName": "entry" });
            Image.debugLine("entry/src/main/ets/view/Page.ets(393:13)", "entry");
            Image.width(28);
            Image.height(28);
            Image.onClick(() => this.autoDialogController.open());
        }, Image);
        Row.pop();
        // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
            Column.create();
            Column.debugLine("entry/src/main/ets/view/Page.ets(410:9)", "entry");
            // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
            Column.width('90%');
            // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
            Column.padding(16);
            // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
            Column.border({ width: 2, color: Color.Blue });
            // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
            Column.borderRadius(12);
            // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
            Column.backgroundColor(Color.White);
            // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
            Column.margin({ top: 50 });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.debugLine("entry/src/main/ets/view/Page.ets(411:11)", "entry");
            Row.justifyContent(FlexAlign.SpaceBetween);
            Row.width('100%');
            Row.alignItems(VerticalAlign.Center);
            Row.margin({ bottom: '12vp' });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÊâãÂä®');
            Text.debugLine("entry/src/main/ets/view/Page.ets(412:13)", "entry");
            Text.fontSize(18);
            Text.fontWeight(600);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Image.create({ "id": 16777423, "type": 20000, params: [], "bundleName": "com.example.pageanddata", "moduleName": "entry" });
            Image.debugLine("entry/src/main/ets/view/Page.ets(416:13)", "entry");
            Image.width(28);
            Image.height(28);
            Image.onClick(() => this.manualDialogController.open());
        }, Image);
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(`‰ΩçÁΩÆÔºöX:${this.positionX1} Y:${this.positionY1}`);
            Text.debugLine("entry/src/main/ets/view/Page.ets(426:11)", "entry");
            Text.fontSize('16fp');
            Text.textAlign(TextAlign.Start);
            Text.width('100%');
            Text.margin({ bottom: '12vp' });
        }, Text);
        Text.pop();
        // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
        Column.pop();
        Column.pop();
        Column.pop();
    }
    aboutToDisappear() {
        // Á°Æ‰øùÂú®Á¶ªÂºÄÈ°µÈù¢Ââç‰øùÂ≠òÊúÄÊñ∞ËÆæÁΩÆ
        this.saveDeviceSettings();
        // ÂÖ≥Èó≠Êú¨Âú∞Â≠òÂÇ®
        if (this.autoModePreference) {
            this.autoModePreference.flush();
        }
        // Âª∂ËøüÂÖ≥Èó≠Êï∞ÊçÆÂ∫ìËøûÊé•
        setTimeout(() => {
            if (this.MemoTable) {
                this.MemoTable.deviceDateTable.closeRdbStore();
                Logger.info('Page', 'Database connection closed');
            }
        }, 500);
    }
    rerender() {
        this.updateDirtyElements();
    }
    static getEntryName() {
        return "Page";
    }
}
registerNamedRoute(() => new Page(undefined, {}), "", { bundleName: "com.example.pageanddata", moduleName: "entry", pagePath: "view/Page", pageFullPath: "entry/src/main/ets/view/Page", integratedHsp: "false", moduleType: "followWithHap" });
//# sourceMappingURL=Page.js.map¬óŸV hvigor_ignore_D:_APPkf_DevEco Studio_sdk_default_openharmony_ets_kits_@kit.ArkUI.d.tsŸYD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\viewmodel\DeviceData.etsŸ^D:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\common\database\MemoTable.etsŸQD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\utils\Logger.etsŸa hvigor_ignore_D:_APPkf_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.data.preferences.d.tsŸpD:\APPkf\huawei_app\PageAndData02\02_Complete\oh_modules\.ohpm\@ohos+axios@2.2.6\oh_modules\@ohos\axios\index.jsŸeD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\common\constants\CommonConstants.etsŸND:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\view\Page.ets‘rBõ™moduleName±isLocalDependencyØisNodeEntryFileßpkgPath±belongProjectPathßpkgName™pkgVersion±dependencyPkgInfo∞belongModulePath¨shouldEmitJsØhostModulesInfo•entry√¬Ÿ3D:\APPkf\huawei_app\PageAndData02\02_Complete\entryŸ-D:\APPkf\huawei_app\PageAndData02\02_Complete•entry•1.0.0‘  Ÿ3D:\APPkf\huawei_app\PageAndData02\02_Complete\entry√ê√⁄8timport { prompt, promptAction, PromptAction } from '@kit.ArkUI';
import { BusinessError } from '@kit.BasicServicesKit';
import DeviceDate from '../viewmodel/DeviceData'
import DeviceItem from '../viewmodel/DeviceItem'
import MemoTable from 'ets/common/database/MemoTable'
import { router } from '@kit.ArkUI';
import Logger from 'ets/utils/Logger';
import preferences from '@ohos.data.preferences';
import axios, { AxiosResponse } from '@ohos/axios'
import  LogUtils  from 'ets/utils/Logger';
import { ToastOptions } from '../common/interfaces/HttpInterfaces';

import CommonConstants from '../common/constants/CommonConstants';


interface PostData {
  target_device: string;
  horizon_angle: number;
  vertical_angle: number;
}
// ÂàõÂª∫ axios ÂÆû‰æã
const instance = axios.create({
  baseURL: "http://10.33.86.16:8080",
  timeout: 5000,
});
// Ëá™Âä®Ê®°ÂºèÂºπÁ™óÁªÑ‰ª∂
@CustomDialog
struct AutoSettingDialog {
  @State intervalTime: string = " ";
  @State positionX: string = " ";
  @State positionY: string = " ";
  @State autoMode: boolean = false;
  controller?: CustomDialogController;
  private onSave: (time: string, x: string, y: string,autoMode:boolean) => void= () => {};

  build() {
    Column() {
      Text("Êó∂Èó¥Èó¥Èöî")
        .fontSize(16)
        .margin({ bottom: 8, top: 20 });

      TextInput({ placeholder: "ËæìÂÖ•Êó∂Èó¥", text: this.intervalTime })
        .width('80%')
        .onChange((value: string) => {
          this.intervalTime = value;
        });

      Text("X ‰ΩçÁΩÆ")
        .fontSize(16)
        .margin({ top: 16, bottom: 8 });

      TextInput({ placeholder: "ËæìÂÖ•XÂùêÊ†á", text: this.positionX.toString() })
        .width('80%')
        .onChange((value: string) => {
          this.positionX = value;
        });

      Text("Y ‰ΩçÁΩÆ")
        .fontSize(16)
        .margin({ top: 16, bottom: 8 });

      TextInput({ placeholder: "ËæìÂÖ•YÂùêÊ†á", text: this.positionY.toString() })
        .width('80%')
        .onChange((value: string) => {
          this.positionY = value;
        });

      Row() {
        Button("ÂèñÊ∂à")
          .onClick(() => this.controller?.close())
          .margin({ right: 8 });

        Button("‰øùÂ≠ò")
          .onClick(() => {
            this.onSave(this.intervalTime, this.positionX, this.positionY, this.autoMode);
            this.controller?.close();
          });
      }
      .justifyContent(FlexAlign.SpaceBetween)
      .margin({ top: 20, bottom: 20 });
    }
    .padding(10)
  }
}


@CustomDialog
struct ManualSettingDialog {
  @State positionX: string = " ";
  @State positionY: string = " ";
  controller?: CustomDialogController;
  private onLaunch: (x: string, y: string) => void = () => {};
  private uiContext: UIContext = this.getUIContext();
  
  private readonly TAG: string = 'ManualSettingDialog';  // Ê∑ªÂä†TAGÁî®‰∫éÊó•Âøó
  

  //
  // // Ê∑ªÂä†ÂìçÂ∫îÊã¶Êà™Âô®
  //
  //
  // // ÂèëÈÄÅÂèëÂ∞ÑËØ∑Ê±Ç
  // private async sendLaunchRequest(x: string, y: string) {
  //   LogUtils.info(this.TAG, `Attempting to send launch request with coordinates: x=${x}, y=${y}`);
  //
  //   // ËæìÂÖ•È™åËØÅ
  //   if (!x || !y) {
  //     LogUtils.warn(this.TAG, 'Invalid input: coordinates cannot be empty');
  //     const toastOpts: ToastOptions = {
  //       message: 'ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÂùêÊ†áÂÄº',
  //       duration: 2000
  //     };
  //     prompt.showToast(toastOpts);
  //     return;
  //   }
  //
  //   const horizonAngle = Number(x);
  //   const verticalAngle = Number(y);
  //
  //   if (isNaN(horizonAngle) || isNaN(verticalAngle)) {
  //     LogUtils.warn(this.TAG, `Invalid number format: x=${x}, y=${y}`);
  //     const toastOpts: ToastOptions = {
  //       message: 'ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊï∞Â≠ó',
  //       duration: 2000
  //     };
  //     prompt.showToast(toastOpts);
  //     return;
  //   }
  //
  //   try {
  //     const requestData: GeneratedObjectLiteralInterface_1 = {
  //       target_device: "motor1",
  //       horizon_angle: horizonAngle,
  //       vertical_angle: verticalAngle
  //     };
  //
  //     LogUtils.info(this.TAG, `Sending request with data: ${JSON.stringify(requestData)}`);
  //
  //     const loadingToast: ToastOptions = {
  //       message: 'ÂèëÂ∞Ñ‰∏≠...',
  //       duration: 2000
  //     };
  //     prompt.showToast(loadingToast);
  //
  //
  //     LogUtils.info(this.TAG, `Launch request successful: ${JSON.stringify(requestData)}`);
  //
  //     const toastOpts: ToastOptions = {
  //       message: 'ÂèëÂ∞ÑÊàêÂäü',
  //       duration: 2000
  //     };
  //     prompt.showToast(toastOpts);
  //
  //     // ‰øùÂ≠ò‰ΩçÁΩÆÊï∞ÊçÆÂπ∂Ë∞ÉÁî®ÂõûË∞É
  //     LogUtils.info(this.TAG, `Saving coordinates: x=${x}, y=${y}`);
  //     this.onLaunch(x, y);
  //
  //   } catch (error) {
  //     LogUtils.error(this.TAG, `Launch request failed: ${error.message}`);
  //     LogUtils.error(this.TAG, `Error details: ${JSON.stringify(error)}`);
  //
  //     const toastOpts: ToastOptions = {
  //       message: `ÂèëÂ∞ÑÂ§±Ë¥•Ôºö${error.message || 'Êú™Áü•ÈîôËØØ'}`,
  //       duration: 2000
  //     };
  //     prompt.showToast(toastOpts);
  //   }
  // }
  //


  build() {
    Column() {
      Text("X ‰ΩçÁΩÆ")
        .fontSize(16)
        .margin({ top: 20, bottom: 8 });

      TextInput({ placeholder: "ËæìÂÖ•XÂùêÊ†á", text: this.positionX.toString() })
        .width('80%')
        .onChange((value: string) => {
          this.positionX = value;
          LogUtils.debug(this.TAG, `X coordinate changed to: ${value}`);
        });

      Text("Y ‰ΩçÁΩÆ")
        .fontSize(16)
        .margin({ top: 16, bottom: 8 });

      TextInput({ placeholder: "ËæìÂÖ•YÂùêÊ†á", text: this.positionY.toString() })
        .width('80%')
        .onChange((value: string) => {
          this.positionY = value;
          LogUtils.debug(this.TAG, `Y coordinate changed to: ${value}`);
        });

      Button("ÂèëÂ∞Ñ")
        .onClick(() => {
          instance.post<PostData>('/device/pub', {
            target_device:"motor1",
            horizon_angle:this.positionX,
            vertical_angle:this.positionY
          }).then((response:AxiosResponse)=>{
              if(response.data.msg=='success'){
                //ÊàêÂäü‰∫Ü‰πãÂêé
                promptAction.showToast({
                  message: 'ÂèëÈÄÅÊàêÂäü',
                  duration: 2000,
                  bottom: 50
                });
              }else if(response.data.code==0){
                promptAction.showToast({
                  message: response.data.msg,
                  duration: 2000,
                  bottom: 50
                });
              }
          })
        })
        .margin({ top: 20, bottom: 20 });
    }
    .padding(10)
  }
}

@Entry
@Component
struct Page {
  @State intervalTime: string = "";
  @State positionX: string = "";
  @State positionY: string = "";
  @State positionX1: string = "";
  @State positionY1: string = "";
  @State autoMode: boolean = false;
  
  private deviceId: number = -1;
  private MemoTable = new MemoTable(() => {});
  private currentDevice: DeviceDate | null = null;
  private autoModePreference: preferences.Preferences | null = null;
  
  aboutToAppear() {
    // ÂàùÂßãÂåñÊú¨Âú∞Â≠òÂÇ®
    let context = getContext(this) as Context;
    preferences.getPreferences(context, 'deviceSettings')
      .then((pref: preferences.Preferences) => {
        this.autoModePreference = pref;
        // ËØªÂèñ‰øùÂ≠òÁöÑËá™Âä®ÂºÄÂÖ≥Áä∂ÊÄÅ
        return this.autoModePreference.get(CommonConstants.AUTO_MODE_KEY, false);
      })
      .then((value: preferences.ValueType) => {
        this.autoMode = Boolean(value);
      })
      .catch((err: Error) => {
        Logger.error('Page', `Failed to get preferences: ${err}`);
      });

    // Ëé∑ÂèñË∑ØÁî±ÂèÇÊï∞‰∏≠ÁöÑËÆæÂ§áÁ¥¢Âºï
    let params = router.getParams();
    // ÂÆö‰πâ‰∏Ä‰∏™Êé•Âè£Êù•ÊèèËø∞ÂèÇÊï∞ÁöÑÁªìÊûÑ
    interface RouteParams {
      id?: number;
    }
    
    // Â∞ÜparamsËΩ¨Êç¢‰∏∫RouteParamsÁ±ªÂûã
    const routeParams = params as RouteParams;
    
    if (routeParams && routeParams.id !== undefined) {
      this.deviceId = routeParams.id;
      Logger.info('Page', `Loading device with ID: ${this.deviceId}`);
      
      // ÂàùÂßãÂåñÊï∞ÊçÆÂ∫ìÂπ∂Âä†ËΩΩËÆæÂ§áÊï∞ÊçÆ
      this.MemoTable.getRdbStore(() => {
        this.MemoTable.query((result: DeviceDate[]) => {
          for (let device of result) {
            if (device.id === this.deviceId) {
              this.currentDevice = device;
              Logger.info('Page', `Found device: ${JSON.stringify(device)}`);
              
              // ËÆæÁΩÆÈ°µÈù¢Áä∂ÊÄÅ
              this.intervalTime = device.intervalTime || "";
              this.positionX = device.positionX || "";
              this.positionY = device.positionY || "";
              this.positionX1 = device.positionX || "";
              this.positionY1 = device.positionY || "";
              break;
            }
          }
        });
      });
    }
  }
  
  // ‰øÆÊîπ‰øùÂ≠òËÆæÂ§áËÆæÁΩÆÁöÑÊñπÊ≥ï
  async saveDeviceSettings() {
    if (this.currentDevice) {
      // ‰øùÂ≠òËá™Âä®ÂºÄÂÖ≥Áä∂ÊÄÅÂà∞Êú¨Âú∞Â≠òÂÇ®
      if (this.autoModePreference) {
        try {
          await this.autoModePreference.put(CommonConstants.AUTO_MODE_KEY, this.autoMode);
          if (this.autoModePreference) {
            await this.autoModePreference.flush();
          }
        } catch (err) {
          Logger.error('Page', `Failed to save auto mode state: ${err}`);
        }
      }

      // ‰øùÂ≠òÂÖ∂‰ªñËÆæÂ§áÊï∞ÊçÆÂà∞Êï∞ÊçÆÂ∫ì
      const updatedDevice = new DeviceDate(
        this.currentDevice.id,
        this.currentDevice.name,
        this.currentDevice.description,
        this.currentDevice.status,
        this.currentDevice.Color,
        this.intervalTime,
        this.autoMode ? this.positionX : this.positionX1,
        this.autoMode ? this.positionY : this.positionY1
      );
      

    }
  }

  private autoDialogController: CustomDialogController = new CustomDialogController({
    builder: AutoSettingDialog({
      intervalTime: this.intervalTime,
      positionX: this.positionX,
      positionY: this.positionY,
      onSave: (time: string, x: string, y: string) => {
        this.intervalTime = time;
        this.positionX = x;
        this.positionY = y;
        this.saveDeviceSettings();
      }
    })
  });

  private manualDialogController: CustomDialogController = new CustomDialogController({
    builder: ManualSettingDialog({
      positionX: this.positionX1,
      positionY: this.positionY1,
      onLaunch: (x: string, y: string) => {
        this.positionX1 = x;
        this.positionY1 = y;
        this.saveDeviceSettings();
      }
    })
  });

  build() {
    Column() {
      Row() {
        Text('ÂèëÂ∞ÑËÆæÁΩÆ')
          .fontWeight(700)
          .fontSize('26fp');
      }
      .width('100%')
      .margin({ top: '48vp', bottom: '12vp' });
      
      Column() {
        // Ëá™Âä®Ê®°ÂºèÂå∫Âùó
        Column() {
          Row() {
            Text('Ëá™Âä®')
              .fontSize(18)
              .fontWeight(600);

            Toggle({ type: ToggleType.Switch, isOn: this.autoMode })
              .width(40)
              .height(24)
              .onChange((isOn: boolean) => {
                this.autoMode = isOn;
                this.saveDeviceSettings();
              });
          }
          .justifyContent(FlexAlign.SpaceBetween)
          .width('100%')
          .alignItems(VerticalAlign.Center)
          .margin({ bottom: '12vp' })

          Text(`ÂèëÂ∞ÑÈó¥ÈöîÔºö${this.intervalTime}`)
            .fontSize('16fp')
            .textAlign(TextAlign.Start)
            .width('100%')
            .margin({ bottom: '12vp' })

          Text(`‰ΩçÁΩÆÔºöX:${this.positionX} Y:${this.positionY}`)
            .fontSize('16fp')
            .textAlign(TextAlign.Start)
            .width('100%')
            .margin({ bottom: '12vp' })

          Row() {
            Image($r('app.media.setting'))
              .width(28)
              .height(28)
              .onClick(() => this.autoDialogController.open());
          }
          .justifyContent(FlexAlign.End)
          .alignItems(VerticalAlign.Center)
          .width('100%')
        }
        .width('90%')
        .padding(16)
        .border({ width: 2, color: "#1A8DFF" })
        .borderRadius(12)
        .backgroundColor(Color.White)
        .margin({ top: 100 });

        // ÊâãÂä®Ê®°ÂºèÂå∫Âùó
        Column() {
          Row() {
            Text('ÊâãÂä®')
              .fontSize(18)
              .fontWeight(600);

            Image($r('app.media.fly'))
              .width(28)
              .height(28)
              .onClick(() => this.manualDialogController.open());
          }
          .justifyContent(FlexAlign.SpaceBetween)
          .width('100%')
          .alignItems(VerticalAlign.Center)
          .margin({ bottom: '12vp' })

          Text(`‰ΩçÁΩÆÔºöX:${this.positionX1} Y:${this.positionY1}`)
            .fontSize('16fp')
            .textAlign(TextAlign.Start)
            .width('100%')
            .margin({ bottom: '12vp' })
        }
        .width('90%')
        .padding(16)
        .border({ width: 2, color: Color.Blue })
        .borderRadius(12)
        .backgroundColor(Color.White)
        .margin({ top: 50 });
      }
      .backgroundImage($r('app.media.backgroundImage'))
      .backgroundImageSize({ width: '100%', height: '100%' })
      .width('100%')
      .height('84%')
      .margin({ top: '20vp' })
      .borderRadius('40vp')
    }
    .width('100%')
    .height('100%')
  }

  aboutToDisappear() {
    // Á°Æ‰øùÂú®Á¶ªÂºÄÈ°µÈù¢Ââç‰øùÂ≠òÊúÄÊñ∞ËÆæÁΩÆ
    this.saveDeviceSettings();
    
    // ÂÖ≥Èó≠Êú¨Âú∞Â≠òÂÇ®
    if (this.autoModePreference) {
      this.autoModePreference.flush();
    }
    
    // Âª∂ËøüÂÖ≥Èó≠Êï∞ÊçÆÂ∫ìËøûÊé•
    setTimeout(() => {
      if (this.MemoTable) {
        this.MemoTable.deviceDateTable.closeRdbStore();
        Logger.info('Page', 'Database connection closed');
      }
    }, 500);
  }
}¿‘rCó™@kit.ArkUI∂@ohos.data.preferences∑../viewmodel/DeviceDataŸ#../common/constants/CommonConstantsΩets/common/database/MemoTable∞ets/utils/Logger´@ohos/axios‘rDó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA√ŸV hvigor_ignore_D:_APPkf_DevEco Studio_sdk_default_openharmony_ets_kits_@kit.ArkUI.d.ts‘rEëØhostModulesInfoî‘rFí≤hostDependencyNameÆhostModuleName™@kit.ArkUI•entryF™@kit.ArkUI•entryF™@kit.ArkUI•entryF™@kit.ArkUI•entry√™oh-resolve¬DA√Ÿa hvigor_ignore_D:_APPkf_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.data.preferences.d.tsEëF∂@ohos.data.preferences•entry√™oh-resolve¬DA¬ŸYD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\viewmodel\DeviceData.etsA√™oh-resolve¬DA¬ŸeD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\common\constants\CommonConstants.etsA√™oh-resolve¬DA¬Ÿ^D:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\common\database\MemoTable.etsA√™oh-resolve¬DA¬ŸQD:\APPkf\huawei_app\PageAndData02\02_Complete\entry\src\main\ets\utils\Logger.etsA√™oh-resolve¬DA¬ŸpD:\APPkf\huawei_app\PageAndData02\02_Complete\oh_modules\.ohpm\@ohos+axios@2.2.6\oh_modules\@ohos\axios\index.jsA√™oh-resolve¬ì‘rGñßversion§file™sourceRootßsources•names®mappingsßPage.js†ë®Page.etsê‹êêêòî    î  î	  î  î  -î  3î)  ?î*  Ã@ñî   î î î î0 0î1 0ñî   î î î î5 5î6 5òî   î î	 	î î î î# #î$ $ñî   î î î î% %î& &ñî   î î î î0 0î1 1ñî   î î î %î 2î  2ñî  	 î 	î 	î 	î' 	)î( 	*ñî   î î î îÃA ÃAîÃB ÃBíî   î òî   î î î î î î î îî î 	î î& $îî î 	î î ìî î î íî î ëî  êêêêíî;  î> #íî8 î;  íî8 î;  íî7 î< "êïî !ÃQî !ÃTî !ÃVî !ÃXî !ÃYêêëî êêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêêíî  î  êëî #êíî $î $
êñî $î $
î ÃQî ÃQî ÃQî ÃQêêîî %î %
î %î %êñî %î %
î &	î &î &î &ûî %î %
î '	î 'î 'î 'î  'î" 'î# 'î% 'î( ' î* '"î, '$î. '&êíî %î %
êûî )î )î )î )î* )î, )î2 )%î4 )'î8 )+î: )-î> )1î? )2îÃK )>îÃM )Ã@êñî )î )î *	î *î *î! *ôî )î )î +	î +î +î  +î% + î' +"î) +$óî ,
î ,î ,î! ,î$ ,î) ,#î* ,$íî -î -	êêîî /î /
î /î /êñî /î /
î 0	î 0î 0î 0ûî /î /
î 1	î 1î 1î 1î 1î 1î! 1î# 1î) 1!î+ 1#î, 1$î. 1&êíî /î /
ê‹ î 3î 3î 3î 3î* 3î, 3î3 3&î5 3(î9 3,î; 3.î? 32îÃ@ 33îÃI 3<îÃJ 3=îÃR 3ÃEîÃT 3ÃGîÃV 3ÃIêñî 3î 3î 4	î 4î 4î! 4ôî 3î 3î 5	î 5î 5î  5î% 5 î' 5"î) 5$óî 6
î 6î 6î 6î! 6î& 6 î' 6!íî 7î 7	êêîî 9î 9
î 9î 9êñî 9î 9
î :	î :î :î :ûî 9î 9
î ;	î ;î ;î ;î ;î ;î! ;î# ;î) ;!î+ ;#î, ;$î. ;&êíî 9î 9
ê‹ î =î =î =î =î* =î, =î3 =&î5 =(î9 =,î; =.î? =2îÃ@ =3îÃI =<îÃJ ==îÃR =ÃEîÃT =ÃGîÃV =ÃIêñî =î =î >	î >î >î! >ôî =î =î ?	î ?î ?î  ?î% ? î' ?"î) ?$óî Ã@
î Ã@î Ã@î Ã@î! Ã@î& Ã@ î' Ã@!íî ÃAî ÃA	êêíî ÃCî ÃC	êòî ÃCî ÃC	î ÃNî ÃNî ÃNî( ÃNî) ÃN î5 ÃN,ûî ÃCî ÃC	î ÃOî ÃOî ÃOî ÃOî ÃOî ÃOî  ÃOî" ÃOî( ÃOî* ÃO!î, ÃO#î. ÃO%êêîî ÃDî ÃDî# ÃDî' ÃDêûî ÃDî ÃDî ÃEî ÃEî ÃEî ÃEî  ÃEî! ÃEî% ÃEî& ÃEî0 ÃE(î2 ÃE*î7 ÃE/î9 ÃE1öî ÃDî ÃDî ÃFî ÃFî ÃFî ÃFî! ÃFî# ÃFî$ ÃFî& ÃFêíî ÃDî ÃDêîî ÃHî ÃHî# ÃHî' ÃHêóî ÃHî ÃHî ÃIî ÃIî ÃIî ÃIî  ÃI‹ î ÃJî ÃJî ÃJî ÃJî ÃJî  ÃJî! ÃJî- ÃJ)î/ ÃJ+î3 ÃJ/î4 ÃJ0î= ÃJ9î? ÃJ;îÃC ÃJ?îÃD ÃJÃ@îÃM ÃJÃIîÃO ÃJÃKîÃS ÃJÃOîÃT ÃJÃPîÃ\ ÃJÃXîÃ] ÃJÃYîÃ^ ÃJÃZòî ÃKî ÃKî ÃKî ÃKî! ÃKî& ÃK"î( ÃK$î) ÃK%íî ÃL
î ÃLêíî ÃHî ÃHíî ÃCî ÃC	íî $î $
ëî ÃRêêêêíî ÃWî ÃWëî ÃV êêêêíî8 ÃXî; ÃX íî8 ÃYî; ÃY êïî Ã[5î Ã[8î Ã[:î  Ã[<î! Ã[=ïî Ã\!î Ã\%î Ã\&î* Ã\2î, Ã\4íî Ã^!î( Ã^6êêëî ÃSêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêíî ÃX	î ÃXêêíî ÃX	î ÃXêêíî ÃY	î ÃYêêíî ÃY	î ÃYêêêíî ÃZî ÃZêíî Ãaî Ãaíî Ãbî Ãbíî Ãcî Ãcíî Ãdî Ãdíî Ãeî Ãeíî Ãfî> Ãf<íî ÃgîÃg ÃgÃeíî Ãhî Ãhíî Ãiî Ãiíî Ãjî Ãjíî ÃkîÃQ ÃkÃOíî Ãlî, Ãl*íî Ãmî" Ãm íî Ãnî Ãníî Ãoî Ãoíî Ãpî' Ãp%íî Ãqî Ãqíî Ãrî
 Ãríî Ãsî Ãsíî Ãtî( Ãt&íî Ãuî) Ãu'íî Ãvî Ãvíî Ãwî; Ãw9íî ÃxîÃL ÃxÃJíî Ãyî, Ãy*íî Ãzî! Ãzíî Ã{î Ã{íî Ã|î Ã|íî Ã}î' Ã}%íî Ã~î Ã~íî Ãî
 Ãíî ÃÄî ÃÄíî ÃÅî ÃÅíî ÃÇîÃC ÃÇÃAíî ÃÉî% ÃÉ#íî ÃÑî) ÃÑ'íî ÃÖî* ÃÖ(íî ÃÜî ÃÜíî Ãáî Ãáíî ÃàîÃ` ÃàÃ^íî Ãâî Ãâíî Ãäî/ Ãä-íî Ããî Ããíî Ãåî Ãåíî Ãçî Ãçíî Ãéî* Ãé(íî Ãèî Ãèíî Ãêî Ãêíî ÃëîÃ` ÃëÃ^íî Ãíî Ãííî Ãìî, Ãì*íî Ãîî Ãîíî Ãïî Ãïíî Ãñî Ãñíî Ãóî' Ãó%íî Ãòî Ãòíî Ãôî Ãôíî ÃöîÃI ÃöÃGíî Ãõî Ãõíî Ãúî Ãúíî Ãùî Ãùíî ÃûîÃO ÃûÃMíî ÃüîÃO ÃüÃMíî Ã†î Ã†íî Ã°î, Ã°*íî Ã¢î8 Ã¢6íî Ã£î Ã£íî Ã§î Ã§íî Ã•î' Ã•%íî Ã¶î
 Ã¶íî Ãßî Ãßíî Ã®î Ã®ëî Ã´êíî Ã¨î Ã¨
êñî Ã¨î Ã¨
î Ã‹î Ã‹î Ã‹î Ã‹êêîî Ã≠î Ã≠
î Ã≠î Ã≠êñî Ã≠î Ã≠
î ÃÆ	î ÃÆî ÃÆî ÃÆûî Ã≠î Ã≠
î ÃØ	î ÃØî ÃØî ÃØî ÃØî ÃØî! ÃØî# ÃØî) ÃØ!î+ ÃØ#î, ÃØ$î. ÃØ&êíî Ã≠î Ã≠
ê‹ î Ã±î Ã±î Ã±î Ã±î* Ã±î, Ã±î3 Ã±&î5 Ã±(î9 Ã±,î; Ã±.î? Ã±2îÃ@ Ã±3îÃI Ã±<îÃJ Ã±=îÃR Ã±ÃEîÃT Ã±ÃGîÃV Ã±ÃIêñî Ã±î Ã±î Ã≤	î Ã≤î Ã≤î! Ã≤ôî Ã±î Ã±î Ã≥	î Ã≥î Ã≥î  Ã≥î% Ã≥ î' Ã≥"î) Ã≥$óî Ã¥
î Ã¥î Ã¥î Ã¥î! Ã¥î& Ã¥ î' Ã¥!ûî Ãµ
î Ãµî Ãµî Ãµî Ãµî# Ãµî$ Ãµî' Ãµ!î) Ãµ#îÃE Ãµ?îÃJ ÃµÃDîÃL ÃµÃFîÃM ÃµÃGîÃN ÃµÃHíî Ã∂î Ã∂	êêîî Ã∏î Ã∏
î Ã∏î Ã∏êñî Ã∏î Ã∏
î Ãπ	î Ãπî Ãπî Ãπûî Ã∏î Ã∏
î Ã∫	î Ã∫î Ã∫î Ã∫î Ã∫î Ã∫î! Ã∫î# Ã∫î) Ã∫!î+ Ã∫#î, Ã∫$î. Ã∫&êíî Ã∏î Ã∏
ê‹ î Ãºî Ãºî Ãºî Ãºî* Ãºî, Ãºî3 Ãº&î5 Ãº(î9 Ãº,î; Ãº.î? Ãº2îÃ@ Ãº3îÃI Ãº<îÃJ Ãº=îÃR ÃºÃEîÃT ÃºÃGîÃV ÃºÃIêñî Ãºî Ãºî ÃΩ	î ÃΩî ÃΩî! ÃΩôî Ãºî Ãºî Ãæ	î Ãæî Ãæî  Ãæî% Ãæ î' Ãæ"î) Ãæ$óî Ãø
î Ãøî Ãøî Ãøî! Ãøî& Ãø î' Ãø!ûî Ã¿
î Ã¿î Ã¿î Ã¿î Ã¿î# Ã¿î$ Ã¿î' Ã¿!î) Ã¿#îÃE Ã¿?îÃJ Ã¿ÃDîÃL Ã¿ÃFîÃM Ã¿ÃGîÃN Ã¿ÃHíî Ã¡î Ã¡	êêîî Ã√î Ã√î# Ã√î' Ã√êóî Ã√î Ã√î Ãƒ	î Ãƒî Ãƒî Ãƒî  Ãƒóî Ã≈
î Ã≈î Ã≈î Ã≈î Ã≈"î+ Ã≈/î- Ã≈1îî Ã∆î! Ã∆î# Ã∆î+ Ã∆"ñî Ã«î! Ã«î# Ã«î' Ã«î( Ã«î1 Ã«(ñî Ã»î" Ã»î$ Ã»î( Ã»î) Ã» î2 Ã»)ôî Ã…î Ã…î Ã…î Ã…î Ã…î Ã…î! Ã…)î# Ã…*î% Ã…,öî Ã î Ã î  Ã î! Ã î% Ã î& Ã î) Ã "î- Ã $î6 Ã -î8 Ã .íî ÃÀî ÃÀïî ÃÃî$ ÃÃî% ÃÃî. ÃÃ&î/ ÃÃ'îî ÃÕî# ÃÕî% ÃÕî+ ÃÕ!îî ÃŒî$ ÃŒî& ÃŒî* ÃŒ îî Ãœî" Ãœî$ Ãœî& Ãœìî Ã–î Ã–î Ã–ëî Ã—öî Ã—î Ã—î% Ã—î& Ã— î* Ã—$î+ Ã—%î/ Ã—)î3 Ã—+î4 Ã—,î6 Ã—-ïî Ã“î$ Ã“î% Ã“î. Ã“&î/ Ã“'òî Ã”î# Ã”î% Ã”î- Ã”#î. Ã”$î2 Ã”(î3 Ã”)î6 Ã”,îî Ã‘î$ Ã‘î& Ã‘î* Ã‘ îî Ã’î" Ã’î$ Ã’î& Ã’ìî Ã÷î Ã÷î Ã÷ëî Ã◊îî Ãÿ
î Ãÿî Ãÿî Ãÿíî ÃŸî ÃŸ	ûî Ã√î Ã√î Ã⁄	î Ã⁄î Ã⁄î Ã⁄î Ã⁄î! Ã⁄î# Ã⁄î% Ã⁄î+ Ã⁄!î- Ã⁄#î/ Ã⁄%î1 Ã⁄'êíî Ã√î Ã√íî Ã¨î Ã¨
ëî Ã›êêêêíî Ã‚î
 Ã‚ëî Ã‡ êêêêíî; Ã„ î= Ã„"íî8 Ã‰î: Ã‰íî8 ÃÂî: ÃÂíî9 ÃÊî; ÃÊ íî9 ÃÁî; ÃÁ íî7 ÃËî< ÃË"ìî ÃÍî ÃÍî ÃÍôî ÃÎî ÃÎî& ÃÎ#î' ÃÎ$î* ÃÎ'î, ÃÎ)î/ ÃÎ+î0 ÃÎ,î1 ÃÎ-íî ÃÏ-î! ÃÏ1íî" ÃÌ?î& ÃÌÃCíî( ÕB=î> ÕBÃSíî ÕCî ÕCìî# ÕCî4 ÕCî; ÕCñî ÕDî  ÕDî" ÕDî& ÕDî' ÕDî3 ÕD%ñî ÕEî ÕEî ÕEî# ÕEî$ ÕEî- ÕEñî ÕFî ÕFî ÕFî# ÕFî$ ÕFî- ÕFõî ÕGî ÕGî ÕGî ÕGî! ÕGî# ÕGî$ ÕG&î& ÕG(î' ÕG1î) ÕG3î+ ÕG5óî ÕHî ÕHî ÕHî) ÕHî, ÕHî0 ÕH î1 ÕH!óî ÕIî ÕIî ÕIî& ÕIî) ÕIî* ÕIî+ ÕIóî ÕJî ÕJî ÕJî& ÕJî) ÕJî* ÕJî+ ÕJñî ÕKî ÕKî ÕKî/ ÕKî1 ÕK!î2 ÕK"íî ÕLî ÕLëî ÕMíî, ÕB
îÃ@ ÕBêêêñî ÕDî$ ÕDî& ÕDî* ÕDî+ ÕDî7 ÕD%ñî ÕEî! ÕEî# ÕEî' ÕEî( ÕEî1 ÕEñî ÕFî! ÕFî# ÕFî' ÕFî( ÕFî1 ÕFõî ÕGî ÕGî  ÕGî! ÕGî% ÕGî' ÕGî( ÕG&î* ÕG(î+ ÕG1î- ÕG3î/ ÕG5óî ÕHî  ÕHî! ÕHî- ÕHî0 ÕHî4 ÕH î5 ÕH!óî ÕIî  ÕIî! ÕIî* ÕIî- ÕIî. ÕIî/ ÕIóî ÕJî  ÕJî! ÕJî* ÕJî- ÕJî. ÕJî/ ÕJñî ÕKî  ÕKî! ÕKî3 ÕKî5 ÕK!î6 ÕK"íî ÕLî ÕLêêêëî ÕMêíî* ÕP?îÃ@ ÕPÃUíî ÕQî ÕQìî# ÕQî6 ÕQ î= ÕQ!ñî ÕRî ÕRî ÕRî# ÕRî$ ÕRî. ÕR ñî ÕSî ÕSî ÕSî# ÕSî$ ÕSî. ÕS ôî ÕTî ÕTî ÕTî ÕTî  ÕTî" ÕTî# ÕT%î% ÕT'î' ÕT)óî ÕUî ÕUî ÕUî' ÕUî* ÕUî+ ÕUî, ÕUóî ÕVî ÕVî ÕVî' ÕVî* ÕVî+ ÕVî, ÕVñî ÕWî ÕWî ÕWî/ ÕWî1 ÕW!î2 ÕW"íî ÕXî ÕXëî ÕYíî, ÕP
îÃB ÕP êêêñî ÕRî! ÕRî# ÕRî' ÕRî( ÕRî2 ÕR ñî ÕSî! ÕSî# ÕSî' ÕSî( ÕSî2 ÕS ôî ÕTî  ÕTî" ÕTî# ÕTî$ ÕTî& ÕTî' ÕT%î) ÕT'î+ ÕT)óî ÕUî  ÕUî! ÕUî+ ÕUî. ÕUî/ ÕUî0 ÕUóî ÕVî  ÕVî! ÕVî+ ÕVî. ÕVî/ ÕVî0 ÕVñî ÕWî  ÕWî! ÕWî3 ÕWî5 ÕW!î6 ÕW"íî ÕXî ÕXêêêëî ÕYêêêëî Ãﬁêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêêíî Ã„	î Ã„êêíî Ã„	î Ã„êêíî Ã‰	î Ã‰êêíî Ã‰	î Ã‰êêíî ÃÂ	î ÃÂêêíî ÃÂ	î ÃÂêêíî ÃÊ	î ÃÊêêíî ÃÊ	î ÃÊêêíî ÃÁ	î ÃÁêêíî ÃÁ	î ÃÁêêíî ÃË	î ÃËêêíî ÃË	î ÃËêêíî ÃÔî ÃÔíî Ãî Ãôî ÃÒî ÃÒî ÃÒî ÃÒî  ÃÒî! ÃÒî% ÃÒ!î& ÃÒ-î' ÃÒ.ôî ÃÚî ÃÚî ÃÚî" ÃÚî# ÃÚî* ÃÚ&î, ÃÚ(î< ÃÚ8î= ÃÚ9óî ÃÛî ÃÛî ÃÛî ÃÛî ÃÛ*î ÃÛ,î ÃÛ.óî ÃÙî ÃÙî ÃÙî# ÃÙî& ÃÙ"î* ÃÙ&î+ ÃÙ'íî Ãıî Ãıüî Ãˆî Ãˆî Ãˆî Ãˆî* Ãˆ&î+ Ãˆ'î. Ãˆ*î/ Ãˆ+î> Ãˆ:î? Ãˆ;îÃL ÃˆÃHîÃN ÃˆÃJîÃS ÃˆÃOîÃT ÃˆÃPîÃU ÃˆÃQìî Ã˜î	 Ã˜î
 Ã˜óî Ã¯î Ã¯î Ã¯î Ã¯î Ã¯)î Ã¯+î Ã¯-öî Ã˘î Ã˘î Ã˘î Ã˘î Ã˘î# Ã˘î$ Ã˘ î) Ã˘%î* Ã˘&î+ Ã˘'ìî Ã˙î	 Ã˙î
 Ã˙óî Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚î Ã˚úî Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î! Ã¸î? Ã¸;îÃB Ã¸>îÃD Ã¸Ã@îÃE Ã¸ÃAîÃF Ã¸ÃBîî Ã˝î	 Ã˝î
 Ã˝î Ã˝	íî Ãˇî Ãˇôî Õ î Õ î Õ î Õ î Õ î Õ î% Õ !î' Õ #î( Õ $íî Õî" Õñî Õî Õ
î Õî Õî" Õ-î# Õ.öî Õ	î Õ	î Õ	î Õ	î& Õ	"î' Õ	#î) Õ	%î. Õ	*î7 Õ	3î9 Õ	5ôî Õ
î Õ

î Õ
î Õ
î Õ
î' Õ
!î( Õ
"î* Õ
$î+ Õ
%ûî Õî Õî Õî Õî Õî Õî  Õî; Õ5î? Õ9îÃ@ Õ:îÃH ÕÃBîÃJ ÕÃDîÃK ÕÃEîÃL ÕÃFíî Õî Õôî Õî Õ
î Õî Õî Õî& Õ î' Õ!î* Õ$î, Õ&õî Õî Õî Õî Õî Õî$ Õî% Õî& Õî, Õ2î. Õ4î0 Õ6óî Õ
î Õî Õî# Õî' Õî- Õ#î/ Õ%öî Õî Õî" Õî# Õî% Õî* Õî. Õ"î/ Õ#î7 Õ+î9 Õ-óî Õî  Õî! Õî. Õ î1 Õ#î7 Õ)î8 Õ*‹ î Õî" Õî# Õî' Õî( Õî. Õ î0 Õ"îÃA Õ3îÃE Õ7îÃF Õ8îÃO ÕÃAîÃP ÕÃBîÃV ÕÃHîÃW ÕÃIîÃY ÕÃKîÃZ ÕÃLîÃ[ ÕÃMíî Õî% Õõî Õî  Õî! Õî- Õî0 Õ"î6 Õ(î7 Õ)îÃC Õ5îÃG Õ9îÃI Õ;îÃJ Õ<õî Õî  Õî! Õî* Õî- Õî3 Õ%î4 Õ&î= Õ/îÃA Õ3îÃC Õ5îÃD Õ6õî Õî  Õî! Õî* Õî- Õî3 Õ%î4 Õ&î= Õ/îÃA Õ3îÃC Õ5îÃD Õ6õî Õî  Õî! Õî+ Õî. Õ î4 Õ&î5 Õ'î> Õ0îÃB Õ4îÃD Õ6îÃE Õ7õî Õî  Õî! Õî+ Õî. Õ î4 Õ&î5 Õ'î> Õ0îÃB Õ4îÃD Õ6îÃE Õ7íî Õî" Õëî Õëî Õîî Õî Õ	î Õ
î Õîî Õî Õî Õî Õ	ëî	 Õ íî Õ!î Õ!íî Õ#î Õ#îî Õ$î	 Õ$î
 Õ$î Õ$ñî Õ%î Õ%î Õ%î Õ%î Õ%î  Õ%íî Õ&î Õ&ñî Õ'î Õ'
î Õ'î Õ'î' Õ'!î) Õ'#íî Õ(î Õ(‹ î Õ)
î Õ)î Õ)î Õ)î1 Õ)'î2 Õ)(î5 Õ)+î6 Õ),îÃE Õ);îÃF Õ)<îÃS Õ)ÃIîÃU Õ)ÃKîÃY Õ)ÃOîÃZ Õ)ÃPîÃb Õ)ÃXîÃc Õ)ÃYîÃd Õ)ÃZñî Õ*
î Õ*î Õ*î Õ*î/ Õ*%î1 Õ*'ôî Õ+î Õ+î" Õ+î# Õ+î5 Õ+)î6 Õ+*î; Õ+/î= Õ+1î> Õ+2ëî Õ,ëî Õ-	îî Õ-
î Õ-î Õ-î Õ-úî Õ.
î Õ.î Õ.î  Õ.î! Õ.î' Õ.î) Õ.îÃL Õ.ÃBîÃO Õ.ÃEîÃQ Õ.ÃGîÃR Õ.ÃHîÃS Õ.ÃIëî Õ/	ëî Õ0íî Õ2î Õ2‹ Jî Õ3î Õ3î Õ3î" Õ3î& Õ3 î0 Õ3*î1 Õ4î5 Õ4î6 Õ4îÃC Õ4îÃD Õ4îÃF Õ4îÃH Õ5îÃL Õ5îÃM Õ5îÃZ Õ5îÃ[ Õ5îÃ_ Õ5îÃa Õ6îÃe Õ6îÃf Õ6îÃs Õ6îÃt Õ6îÃ Õ6&îÃÅ Õ7îÃÖ Õ7îÃÜ Õ7îÃì Õ7îÃî Õ7îÃö Õ7!îÃú Õ8îÃ† Õ8îÃ° Õ8îÃÆ Õ8îÃØ Õ8îÃ¥ Õ8 îÃ∂ Õ9îÃ∫ Õ9îÃª Õ9îÃ« Õ9îÃ… Õ:îÃÕ Õ:îÃŒ Õ:îÃ÷ Õ:îÃ◊ Õ:îÃÿ Õ:îÃŸ Õ:îÃ› Õ:îÃﬁ Õ:îÃÁ Õ:&îÃË Õ:'îÃÈ Õ:(îÃÍ Õ:)îÃÓ Õ:-îÃÔ Õ:.îÃ˘ Õ:8îÃ˚ Õ;îÃˇ Õ;îÕ  Õ;îÕ Õ;îÕ	 Õ;îÕ
 Õ;îÕ Õ;îÕ Õ;îÕ Õ;îÕ Õ;&îÕ Õ;'îÕ Õ;(îÕ Õ;)îÕ  Õ;-îÕ! Õ;.îÕ+ Õ;8îÕ, Õ<îÕ- Õ<ëî	 Õ?íî Õ@î Õ@ëî Õ\êíî Õ]î Õ]
êñî Õ]î Õ]
î ÕΩî ÕΩ
î ÕΩî ÕΩñî Õ]î Õ]
î Õæî Õæî Õæî  Õæêêíî Õ^î Õ^	êñî Õ^î Õ^	î Õcî Õcî Õcî Õcûî Õ^î Õ^	î Õdî Õdî Õdî Õdî Õdî Õdî$ Õdî& Õdî, Õd#î. Õd%î4 Õd+î6 Õd-êêîî Õ_î Õ_î Õ_î Õ_êñî Õ_î Õ_î Õ`î Õ`î Õ`î Õ`ñî Õ_î Õ_î Õaî Õaî Õaî  Õaêíî Õ_î Õ_íî Õ^î Õ^	êíî Õfî Õfêîî Õfî Õfî Õ∂î" Õ∂ûî Õfî Õfî Õ∑î& Õ∑î' Õ∑î) Õ∑î. Õ∑"î0 Õ∑$î6 Õ∑*î8 Õ∑,î> Õ∑2îÃ@ Õ∑4îÃF Õ∑:îÃH Õ∑<ñî Õfî Õfî Õ∏î Õ∏î Õ∏î Õ∏ñî Õfî Õfî Õπî Õπî Õπî Õπöî Õfî Õfî Õ∫î Õ∫î Õ∫î Õ∫î Õ∫î! Õ∫î' Õ∫î) Õ∫ñî Õfî Õfî Õªî Õªî  Õªî& Õªêêíî Õgî Õgíî Õhî Õhêíî Õgî Õgñî Õhî Õhî Õë	î Õëî Õëî Õëíî Õgî Õgñî Õhî Õhî Õí	î Õíî Õíî Õííî Õgî Õgûî Õhî Õhî Õì	î Õìî Õìî Õìî! Õìî# Õìî$ Õìî& Õìî+ Õì!î- Õì#î6 Õì,î8 Õì.íî Õgî Õgñî Õhî Õhî Õî	î Õîî  Õîî" Õîíî Õgî Õgòî Õhî Õhî Õï	î" Õïî# Õïî( Õïî) Õïî. Õï$íî Õgî Õgöî Õhî Õhî Õñ	î Õñî Õñî Õñî Õñî! Õñî$ Õñî& Õñêêíî Õi
î Õiêòî Õi
î Õiî Õvî Õvî Õvî( Õv#î) Õv$î5 Õv0ñî Õi
î Õiî Õwî Õwî Õwî Õwòî Õi
î Õiî Õxî Õxî Õxî( Õx#î) Õx$î/ Õx*öî Õi
î Õiî Õyî Õyî Õyî Õyî Õyî! Õyî' Õy"î) Õy$êêîî Õjî Õjî Õjî Õjêñî Õjî Õjî Õkî Õkî Õkî Õkñî Õjî Õjî Õlî Õlî Õlî Õlêíî Õjî Õjê‹ î Õnî Õnî Õnî Õnî  Õnî" Õnî, Õn%î- Õn&î3 Õn,î5 Õn.î9 Õn2î; Õn4î? Õn8îÃ@ Õn9îÃH ÕnÃAîÃJ ÕnÃCêñî Õnî Õnî Õoî Õoî Õoî Õoñî Õnî Õnî Õpî Õpî Õpî Õpôî Õnî Õnî Õqî Õqî Õqî Õqî! Õq&î# Õq(î% Õq*óî Õrî Õrî Õrî Õrî  Õr î$ Õr$î% Õr%ñî Õsî Õsî Õsî' Õs'î) Õs)î* Õs*íî Õtî Õtêíî Õnî Õníî Õi
î Õiêòî Õ{
î Õ{î Õ{î  Õ{î$ Õ{î% Õ{î1 Õ{(î3 Õ{*êñî Õ{
î Õ{î Õ|î Õ|î Õ|î  Õ|òî Õ{
î Õ{î Õ}î Õ}î Õ}î$ Õ} î% Õ}!î* Õ}&ñî Õ{
î Õ{î Õ~î Õ~î Õ~î Õ~öî Õ{
î Õ{î Õî Õî Õî Õî  Õî" Õî( Õ$î* Õ&êíî Õ{
î Õ{êúî ÕÅ
î ÕÅî ÕÅî  ÕÅî$ ÕÅî% ÕÅî. ÕÅ%î4 ÕÅ+î8 ÕÅ/î9 ÕÅ0îÃB ÕÅ9îÃD ÕÅ;êñî ÕÅ
î ÕÅî ÕÇî ÕÇî ÕÇî  ÕÇòî ÕÅ
î ÕÅî ÕÉî ÕÉî ÕÉî$ ÕÉ î% ÕÉ!î* ÕÉ&ñî ÕÅ
î ÕÅî ÕÑî ÕÑî ÕÑî ÕÑöî ÕÅ
î ÕÅî ÕÖî ÕÖî ÕÖî ÕÖî  ÕÖî" ÕÖî( ÕÖ$î* ÕÖ&êíî ÕÅ
î ÕÅêíî Õá
î Õáêòî Õá
î Õáî Õçî Õçî Õçî( Õç#î) Õç$î, Õç'òî Õá
î Õáî Õéî Õéî Õéî( Õé#î) Õé$î/ Õé*ñî Õá
î Õáî Õèî Õèî Õèî Õèêêíî Õàî Õàêñî Õàî Õàî Õâî Õâî Õâî Õâñî Õàî Õàî Õäî Õäî Õäî Õäûî Õàî Õàî Õãî Õãî Õãî Õãî Õãî  Õãî$ Õã!î% Õã"î9 Õã6î: Õã7î> Õã;îÃ@ Õã=êíî Õá
î Õáíî Õgî Õgíî Õhî Õhêíî Õòî Õòíî Õôî Õôêíî Õòî Õòñî Õôî Õôî ÕØ	î ÕØî ÕØî ÕØíî Õòî Õòñî Õôî Õôî Õ∞	î Õ∞î Õ∞î Õ∞íî Õòî Õò‹ î Õôî Õôî Õ±	î Õ±î Õ±î Õ±î! Õ±î# Õ±î$ Õ±î& Õ±î+ Õ±!î- Õ±#î2 Õ±(î3 Õ±)î7 Õ±-î9 Õ±/íî Õòî Õòñî Õôî Õôî Õ≤	î Õ≤î  Õ≤î" Õ≤íî Õòî Õòòî Õôî Õôî Õ≥	î" Õ≥î# Õ≥î( Õ≥î) Õ≥î. Õ≥$íî Õòî Õòöî Õôî Õôî Õ¥	î Õ¥î Õ¥î Õ¥î Õ¥î! Õ¥î# Õ¥î% Õ¥êêíî Õö
î Õöêòî Õö
î Õöî Õ§î Õ§î Õ§î( Õ§#î) Õ§$î5 Õ§0ñî Õö
î Õöî Õ•î Õ•î Õ•î Õ•òî Õö
î Õöî Õ¶î Õ¶î Õ¶î( Õ¶#î) Õ¶$î/ Õ¶*öî Õö
î Õöî Õßî Õßî Õßî Õßî Õßî! Õßî' Õß"î) Õß$êêîî Õõî Õõî Õõî Õõêñî Õõî Õõî Õúî Õúî Õúî Õúñî Õõî Õõî Õùî Õùî Õùî Õùêíî Õõî Õõêíî Õüî Õüêñî Õüî Õüî Õ†î Õ†î Õ†î Õ†ñî Õüî Õüî Õ°î Õ°î Õ°î Õ°ûî Õüî Õüî Õ¢î Õ¢î Õ¢î Õ¢î Õ¢î  Õ¢î$ Õ¢!î% Õ¢"î; Õ¢8î< Õ¢9îÃ@ Õ¢=îÃB Õ¢?êíî Õö
î Õöêúî Õ©
î Õ©î Õ©î  Õ©î$ Õ©î% Õ©î/ Õ©&î5 Õ©,î9 Õ©0î: Õ©1îÃD Õ©;îÃF Õ©=êñî Õ©
î Õ©î Õ™î Õ™î Õ™î  Õ™òî Õ©
î Õ©î Õ´î Õ´î Õ´î$ Õ´ î% Õ´!î* Õ´&ñî Õ©
î Õ©î Õ¨î Õ¨î Õ¨î Õ¨öî Õ©
î Õ©î Õ≠î Õ≠î Õ≠î Õ≠î  Õ≠î" Õ≠î( Õ≠$î* Õ≠&êíî Õ©
î Õ©íî Õòî Õòíî Õôî Õôíî Õfî Õfíî Õ]î Õ]
ëî Õøíî Õ¡î Õ¡íî Õ¬î Õ¬ñî Õ√î Õ√î Õ√	î Õ√î! Õ√î" Õ√íî Õ≈î Õ≈ñî Õ∆î Õ∆î Õ∆î Õ∆î# Õ∆î% Õ∆!òî Õ«î Õ«
î Õ«î# Õ«î$ Õ«î) Õ«#î+ Õ«%î, Õ«&ëî	 Õ»íî Õ î Õ ïî ÕÀî ÕÀî ÕÀî ÕÀî ÕÀñî ÕÃî ÕÃ
î ÕÃî ÕÃî ÕÃî  ÕÃöî ÕÕî ÕÕî ÕÕî ÕÕî ÕÕî. ÕÕ&î/ ÕÕ'î< ÕÕ4î> ÕÕ6î? ÕÕ7öî ÕŒî ÕŒî ÕŒî ÕŒî ÕŒî" ÕŒî$ ÕŒîÃ@ ÕŒ8îÃA ÕŒ9îÃB ÕŒ:ëî Õœñî Õ–î	 Õ–î Õ–î Õ–
î Õ–î Õ–íî Õ—î Õ—‘rHñßversion§fileßsourcesÆsourcesContent•names®mappings¿ë¿ë¿ê‹"ëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ëî  Ãg ëî  Ãh ëî  Ãi ëî  Ãj ëî  Ãk ëî  Ãl ëî  Ãm ëî  Ãn ëî  Ão ëî  Ãp ëî  Ãq ëî  Ãr ëî  Ãs ëî  Ãt ëî  Ãu ëî  Ãv ëî  Ãw ëî  Ãx ëî  Ãy ëî  Ãz ëî  Ã{ ëî  Ã| ëî  Ã} ëî  Ã~ ëî  Ã ëî  ÃÄ ëî  ÃÅ ëî  ÃÇ ëî  ÃÉ ëî  ÃÑ ëî  ÃÖ ëî  ÃÜ ëî  Ãá ëî  Ãà ëî  Ãâ ëî  Ãä ëî  Ãã ëî  Ãå ëî  Ãç ëî  Ãé ëî  Ãè ëî  Ãê ëî  Ãë ëî  Ãí ëî  Ãì ëî  Ãî ëî  Ãï ëî  Ãñ ëî  Ãó ëî  Ãò ëî  Ãô ëî  Ãö ëî  Ãõ ëî  Ãú ëî  Ãù ëî  Ãû ëî  Ãü ëî  Ã† ëî  Ã° ëî  Ã¢ ëî  Ã£ ëî  Ã§ ëî  Ã• ëî  Ã¶ ëî  Ãß ëî  Ã® ëî  Ã© ëî  Ã™ ëî  Ã´ ëî  Ã¨ ëî  Ã≠ ëî  ÃÆ ëî  ÃØ ëî  Ã∞ ëî  Ã± ëî  Ã≤ ëî  Ã≥ ëî  Ã¥ ëî  Ãµ ëî  Ã∂ ëî  Ã∑ ëî  Ã∏ ëî  Ãπ ëî  Ã∫ ëî  Ãª ëî  Ãº ëî  ÃΩ ëî  Ãæ ëî  Ãø ëî  Ã¿ ëî  Ã¡ ëî  Ã¬ ëî  Ã√ ëî  Ãƒ ëî  Ã≈ ëî  Ã∆ ëî  Ã« ëî  Ã» ëî  Ã… ëî  Ã  ëî  ÃÀ ëî  ÃÃ ëî  ÃÕ ëî  ÃŒ ëî  Ãœ ëî  Ã– ëî  Ã— ëî  Ã“ ëî  Ã” ëî  Ã‘ ëî  Ã’ ëî  Ã÷ ëî  Ã◊ ëî  Ãÿ ëî  ÃŸ ëî  Ã⁄ ëî  Ã€ ëî  Ã‹ ëî  Ã› ëî  Ãﬁ ëî  Ãﬂ ëî  Ã‡ ëî  Ã· ëî  Ã‚ ëî  Ã„ ëî  Ã‰ ëî  ÃÂ ëî  ÃÊ ëî  ÃÁ ëî  ÃË ëî  ÃÈ ëî  ÃÍ ëî  ÃÎ ëî  ÃÏ ëî  ÃÌ ëî  ÃÓ ëî  ÃÔ ëî  Ã ëî  ÃÒ ëî  ÃÚ ëî  ÃÛ ëî  ÃÙ ëî  Ãı ëî  Ãˆ ëî  Ã˜ ëî  Ã¯ ëî  Ã˘ ëî  Ã˙ ëî  Ã˚ ëî  Ã¸ ëî  Ã˝ ëî  Ã˛ ëî  Ãˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ëî  Õ˙ ëî  Õ˚ ëî  Õ¸ ëî  Õ˝ ëî  Õ˛ ëî  Õˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ëî  Õ˙ ëî  Õ˚ ëî  Õ¸ ëî  Õ˝ ëî  Õ˛ ëî  Õˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ‘rIíßmissing¶plugin√¶genAbc¬ê‘  ‘rJî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêêô‘rKï§type•start£end™specifiers¶source±ImportDeclarationÃÄÃ™ë‘rLï§type•start£end®imported•localØImportSpecifierÃâÃï‘rMî§type•start£end§name™IdentifierÃâÃï¨promptActionM™IdentifierÃâÃï¨promptAction‘rNï§type•start£end•value£rawßLiteralÃùÃ©™@kit.ArkUI¨'@kit.ArkUI'K±ImportDeclarationÃ¨Ã›ë‘rOî§type•start£end•local∂ImportDefaultSpecifierÃ≥ÃΩM™IdentifierÃ≥ÃΩ™DeviceDateNßLiteralÃ√Ã‹∑../viewmodel/DeviceDataπ'../viewmodel/DeviceData'K±ImportDeclarationÃﬂÕëO∂ImportDefaultSpecifierÃÊÃÔM™IdentifierÃÊÃÔ©MemoTableNßLiteralÃıÕΩets/common/database/MemoTableø'ets/common/database/MemoTable'K±ImportDeclarationÕÕ;ëLØImportSpecifierÕ Õ&M™IdentifierÕ Õ&¶routerM™IdentifierÕ Õ&¶routerNßLiteralÕ.Õ:™@kit.ArkUI¨'@kit.ArkUI'K±ImportDeclarationÕ=ÕcëO∂ImportDefaultSpecifierÕDÕJM™IdentifierÕDÕJ¶LoggerNßLiteralÕPÕb∞ets/utils/Logger≤'ets/utils/Logger'K±ImportDeclarationÕeÕñëO∂ImportDefaultSpecifierÕlÕwM™IdentifierÕlÕw´preferencesNßLiteralÕ}Õï∂@ohos.data.preferences∏'@ohos.data.preferences'K±ImportDeclarationÕòÕ∏ëO∂ImportDefaultSpecifierÕüÕ§M™IdentifierÕüÕ§•axiosNßLiteralÕ™Õ∑´@ohos/axios≠'@ohos/axios'K±ImportDeclarationÕ∫Õ‚ëO∂ImportDefaultSpecifierÕ¡Õ…M™IdentifierÕ¡Õ…®LogUtilsNßLiteralÕœÕ·∞ets/utils/Logger≤'ets/utils/Logger'K±ImportDeclarationÕ‰Õ&ëO∂ImportDefaultSpecifierÕÎÕ˙M™IdentifierÕÎÕ˙ØCommonConstantsNßLiteralÕ Õ%Ÿ#../common/constants/CommonConstantsŸ%'../common/constants/CommonConstants'